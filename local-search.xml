<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>自建 Aria2 离线下载网盘</title>
    <link href="/aria2-rclone/"/>
    <url>/aria2-rclone/</url>
    
    <content type="html"><![CDATA[<h1 id="你需要要自建离线下载吗？"><a href="#你需要要自建离线下载吗？" class="headerlink" title="你需要要自建离线下载吗？"></a>你需要要自建离线下载吗？</h1><p>开始前问问自己是否真的有必要为了下载 BT 购买服务器，服务器的优点无非是可以不间断下载和做种，随时随地打开网页就能下载。并且得益于国外良好的 BT 环境，下载速度也会比国内家用带宽好点，不过遇到断种的文件该下不动还是下不动。也能避免本地下载时影响打游戏（好的路由影响不大）。</p><div class="note note-info">            <p><font size=3><strong>准备环境</strong></font></p><ul><li>一台 VPS 服务器（硬盘要大，没有的推荐 FranTech 家，介绍文章：<a href="https://oooutman.github.io/buyvm-frantech/">G口无限流量的大盘鸡 FranTech(BuyVM) 购买教程</a>）</li><li>SSH 远程登录工具（不会用可以看这篇教程：<a href="https://oooutman.github.io/ssh-putty/">SSH 客户端 Putty 简易使用教程</a>）</li><li>教程使用 Debian 11 x64 系统搭建</li></ul>          </div><h1 id="更新系统安装一些工具"><a href="#更新系统安装一些工具" class="headerlink" title="更新系统安装一些工具"></a>更新系统安装一些工具</h1><p>SSH 客户端登录连接服务器后，复制下面命令粘贴后回车即可运行，系统更新快慢看你服务器品质了，通常几分钟就能完事。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">apt <span class="hljs-keyword">update</span> <span class="hljs-variable">&amp;&amp;</span> apt upgrade <span class="hljs-variable">&amp;&amp;</span> apt install wget curl -y<br></code></pre></td></tr></table></figure><blockquote><p>等界面停止能看到 <code>命令提示符和光标</code> 就表示执行完毕，一般最后几行会有命令执行的通知，告诉你成功了还是失败了，看不懂英语的可以复制出来翻译下。有些命令执行不会有通知，通常也算好结果，小白只要关注有执行通知的，确保没有报错，遇到报错可以网上查下，也可以问 AI。</p></blockquote><h1 id="安装-Aria2-一键安装脚本"><a href="#安装-Aria2-一键安装脚本" class="headerlink" title="安装 Aria2 一键安装脚本"></a>安装 Aria2 一键安装脚本</h1><p>下载脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N git.io/aria2.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x aria2.sh<br></code></pre></td></tr></table></figure><p>运行脚本（以后要进入脚本管理界面也是使用这个命令）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./aria2.sh<br></code></pre></td></tr></table></figure><p>运行后出现如下脚本的管理界面，包含了脚本的一些功能，这里输入 <code>1</code> 回车来安装 Aria2。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs markdown">Aria2 一键安装管理脚本 增强版 [v2.7.4] by P3TERX.COM<br><br><span class="hljs-bullet"> 0.</span> 升级脚本<br>———————————————————————<br><span class="hljs-bullet"> 1.</span> 安装 Aria2<br><span class="hljs-bullet"> 2.</span> 更新 Aria2<br><span class="hljs-bullet"> 3.</span> 卸载 Aria2<br>———————————————————————<br><span class="hljs-bullet"> 4.</span> 启动 Aria2<br><span class="hljs-bullet"> 5.</span> 停止 Aria2<br><span class="hljs-bullet"> 6.</span> 重启 Aria2<br>———————————————————————<br><span class="hljs-bullet"> 7.</span> 修改 配置<br><span class="hljs-bullet"> 8.</span> 查看 配置<br><span class="hljs-bullet"> 9.</span> 查看 日志<br><span class="hljs-bullet">10.</span> 清空 日志<br>———————————————————————<br><span class="hljs-bullet">11.</span> 手动更新 BT-Tracker<br><span class="hljs-bullet">12.</span> 自动更新 BT-Tracker<br>———————————————————————<br><br>Aria2 状态: 未安装<br><br>请输入数字 [0-12]: 1<br></code></pre></td></tr></table></figure><p>安装过程很快，完成后看到如下信息 ，IPv6 检测失败是因为服务器没有启用，不用管它问题不大。可以看到脚本还生成了 <code>AriaNg 链接</code>，省去了自己安装 AriaNg 的功夫，复制链接浏览器打开就可以使用了。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ada">Aria2 简单配置信息：<br><br> IPv4 地址      : 35.197.113.2<br> IPv6 地址      : <span class="hljs-type">IPv6</span> 地址检测失败<br> RPC 端口       : 6800<br> RPC 密钥       : 44<span class="hljs-type">ae05e0ed2a166d089b</span><br> 下载目录       : /<span class="hljs-type">root</span>/downloads<br> AriaNg 链接    : <span class="hljs-type">http</span>://ariang.js.org/#!/settings/rpc/set/ws/<span class="hljs-number">35.197</span>.<span class="hljs-number">113.2</span>/<span class="hljs-number">6800</span>/jsonrpc/NDRhZTA1ZTBlZDJhMTY2ZDA4OWI=<br><br>[信息] Aria2 启动成功 !<br></code></pre></td></tr></table></figure><p>不过使用前还是推荐修改下下载目录，不要放在 root 目录下，推荐改到 mnt 目录，如果你的服务器是挂载的块存储，下载目录要设在块存储上，别到时候说怎么我的系统盘满了。可以使用 <code>./aria2.sh</code> 命令重新打开脚本管理界面，选择第 7 项“修改配置”，再选选择“修改 Aria2 下载目录”，比如改为 <code>/mnt/downloads/</code>，如果没有这个目录会自动给你创建，无需提前创建，改完会自动重启生效。</p><div class="note note-info">            <p>Aria2 本身是个命令行程序（背地里干活的后端），得输入命令才能使用；而 AriaNg 是一个 Aria2 的图形化界面（与人交互的前端），使用直观便利。上面配置信息里的 AriaNg 并没有在你服务器上安装，这个 ariang.js.org 是别人使用这个域名搭建公开分享的面板。不过也不用担心数据泄露，AriaNg 只是一个静态网页，负责发送指令给 Aria2 服务端，填写的 RPC 地址和 RPC 密钥等设置数据只会储存在本地浏览器中。除此之外还有一些公开的 AriaNg 面板，比如 <a href="https://github.com/mayswind/AriaNg">AriaNg 项目</a> 开发者提供的 Demo 页面：<a href="http://ariang.mayswind.net/latest">http://ariang.mayswind.net/latest</a></p>          </div><h1 id="管理下载的文件"><a href="#管理下载的文件" class="headerlink" title="管理下载的文件"></a>管理下载的文件</h1><p>如果你用宝塔面板的话可以直接在宝塔的 <code>文件</code> 菜单内管理。或者你也可以安装 FileBrowser 来管理文件，像使用各种网盘那样管理下载文件。</p><p>FileBrowser 安装也简单，教程可以查看这篇文章：<a href="http://oooutman.github.io/FileBrowser/">http://oooutman.github.io/FileBrowser/</a></p>]]></content>
    
    
    <categories>
      
      <category>玩转 VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Aria2</tag>
      
      <tag>离线下载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>科学上网一键脚本 VLESS-XTLS-uTLS-REALITY</title>
    <link href="/reality-v2ray/"/>
    <url>/reality-v2ray/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>这个教程使用目前最新的 REALITY 协议，各协议间的区别我就不说，有兴趣自行查阅资料。</p><p>官方说法是 REALITY 可以消除服务端 TLS 指纹特征，同时保留前向保密性等功能，证书链攻击也无效，安全性超越了常规的 TLS。还有个优点是 REALITY 可以指向别人的网站，无需自己购买域名和配置 TLS 服务端，省事很多，毕竟现在免费域名越来越难搞了，Freenom 上个月吃了官司也关闭了域名注册通道。</p><div class="note note-info">            <ul><li><strong>一台 VPS</strong> (教程使用 Debian 11 x64 系统，没有机子的新人推荐看看：<a href="https://oooutman.github.io/Vultr_free_250/">Vultr 新人免费250美金试用教程</a>)</li><li><strong>SSH 远程登录工具</strong>（不会看看这篇教程：<a href="https://oooutman.github.io/ssh-putty/">SSH 客户端 Putty 简易使用教程</a>）</li></ul>          </div><h1 id="SSH-登录-VPS-操作"><a href="#SSH-登录-VPS-操作" class="headerlink" title="SSH 登录 VPS 操作"></a>SSH 登录 VPS 操作</h1><h3 id="更新系统并安装-wget-工具"><a href="#更新系统并安装-wget-工具" class="headerlink" title="更新系统并安装 wget 工具"></a>更新系统并安装 wget 工具</h3><p>SSH 客户端登录连接服务器后，复制下面命令粘贴后回车即可运行，系统更新快慢要看你服务器品质了，通常几分钟内就能完事，Vultr 家的机子可以不用更新，购买部署机子时就后台升级过了。</p><p>等界面停止能看到 <code>命令提示符和光标</code> 就表示执行完毕，一般最后几行会有命令执行的通知，告诉你成功了还是失败了，看不懂英语的可以复制出来翻译下。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">apt <span class="hljs-keyword">update</span> <span class="hljs-variable">&amp;&amp;</span> apt upgrade <span class="hljs-variable">&amp;&amp;</span> apt install wget -y<br></code></pre></td></tr></table></figure><h3 id="开启-BBR"><a href="#开启-BBR" class="headerlink" title="开启 BBR"></a>开启 BBR</h3><p>BBR 是一种拥塞控制算法，简单说就是可以让你的网络连接更快更稳定。<br>复制下面三个命令运行，一次一行。前两个运行不会有提示，这种没报错也没提示基本都算好结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf<br>sysctl -p<br></code></pre></td></tr></table></figure><p>上面的前两个命令的意思是在 <code>/etc/sysctl.conf</code> 配置文件内写入 <code>net.core.default_qdisc=fq</code> 和 <code>net.ipv4.tcp_congestion_control=bbr</code>，最后一个 <code>sysctl -p</code> 是应用更改，运行后输出前面输入的两行内容就是成功了。</p><p><img src="https://mdzz.cf/images/2023/04/30/REALITY_01.jpg" alt="REALITY_01.jpg"></p><h3 id="放行-443-端口"><a href="#放行-443-端口" class="headerlink" title="放行 443 端口"></a>放行 443 端口</h3><p>后面配置要使用到 443 端口，脚本只有设置端口，不会给你放行端口，所以先提前放行。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -<span class="hljs-selector-tag">I</span> <span class="hljs-selector-tag">INPUT</span> -<span class="hljs-selector-tag">p</span> tcp <span class="hljs-attr">--dport</span> <span class="hljs-number">443</span> -j ACCEPT<br></code></pre></td></tr></table></figure><blockquote><p>REALITY 使用其它端口貌似也具有相同伪装性（不打保证），对于自己服务器上已经有站点的，也不用为了共存另外设置反向代理或分流之类的。</p></blockquote><h1 id="一键脚本安装"><a href="#一键脚本安装" class="headerlink" title="一键脚本安装"></a>一键脚本安装</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget --no-check-certificate -O <span class="hljs-variable">$&#123;HOME&#125;</span><span class="hljs-regexp">/Xray-script.sh https:/</span><span class="hljs-regexp">/raw.githubusercontent.com/</span>zxcvos<span class="hljs-regexp">/Xray-script/m</span>ain<span class="hljs-regexp">/reality.sh &amp;&amp; bash $&#123;HOME&#125;/</span>Xray-script.sh<br></code></pre></td></tr></table></figure><p>复制上面👆一整行命令运行后会出现如下👇安装向导，有各种选项设置，这里我们当然是选 1 安装了，在最后的 <code>Choose:</code> 输入 <code>1</code> 回车即可安装。</p><p>以后要进入这个管理脚本界面输入 <code>bash Xray-script.sh</code> 这个命令就可以进入了，现在别管。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs markdown">--------------- Xray-script ---------------<br> Version      : v2023-03-15(beta)<br> Description  : Xray 管理脚本<br>----------------- 装载管理 ----------------<br><span class="hljs-bullet">1.</span> 安装<br><span class="hljs-bullet">2.</span> 更新<br><span class="hljs-bullet">3.</span> 卸载<br>----------------- 操作管理 ----------------<br><span class="hljs-bullet">4.</span> 启动<br><span class="hljs-bullet">5.</span> 停止<br><span class="hljs-bullet">6.</span> 重启<br>----------------- 配置管理 ----------------<br><span class="hljs-bullet">101.</span> 查看配置<br><span class="hljs-bullet">102.</span> 信息统计<br><span class="hljs-bullet">103.</span> 修改 id<br><span class="hljs-bullet">104.</span> 修改 dest<br><span class="hljs-bullet">105.</span> 修改 x25519 key<br><span class="hljs-bullet">106.</span> 修改 shortIds<br><span class="hljs-bullet">107.</span> 修改 xray 监听端口<br><span class="hljs-bullet">108.</span> 刷新已有的 shortIds<br><span class="hljs-bullet">109.</span> 追加自定义的 shortIds<br><span class="hljs-bullet">110.</span> 使用 WARP 分流，开启 OpenAI<br>----------------- 其他选项 ----------------<br><span class="hljs-bullet">201.</span> 更新至最新稳定版内核<br><span class="hljs-bullet">202.</span> 卸载多余内核<br><span class="hljs-bullet">203.</span> 修改 ssh 端口<br><span class="hljs-section">204. 网络连接优化</span><br><span class="hljs-section">-------------------------------------------</span><br><span class="hljs-bullet">0.</span> 退出<br>Choose:<br></code></pre></td></tr></table></figure><p>安装过程进行一会儿会提示你输入自定义端口，这里直接回车不填就会使用默认 <code>443</code> 端口了。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">请输入自定义的端口(<span class="hljs-number">1-65535</span>), 默认不修改:<br></code></pre></td></tr></table></figure><p>接着提示输入 UUID，也可以直接回车让它自动生成</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">请输入自定义 UUID, 默认则自动生成</span><span class="hljs-punctuation">:</span><br></code></pre></td></tr></table></figure><p>出现让你设置目标网站的选项，也可以看情况输入 <code>0</code> 自填网站地址。<br>填写的网站建议跟你 VPS 所在地差不多，IP 长的像当然最好，不过不好找，但是所在地比较简单。比如我的 IP 是大版的，我可以找家日本动画公司官网填写。不过这里选项里有几个 .jp 域名后缀的日本网站，我就直接填 <code>5</code> 回车。 </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs stylus">---------------- dest 列表 -----------------<br><span class="hljs-number">1</span>) learn<span class="hljs-selector-class">.microsoft</span><span class="hljs-selector-class">.com</span><br><span class="hljs-number">2</span>) www<span class="hljs-selector-class">.apple</span><span class="hljs-selector-class">.com</span><br><span class="hljs-number">3</span>) music<span class="hljs-selector-class">.apple</span><span class="hljs-selector-class">.com</span><br><span class="hljs-number">4</span>) www<span class="hljs-selector-class">.fandom</span><span class="hljs-selector-class">.com</span><br><span class="hljs-number">5</span>) www<span class="hljs-selector-class">.lovelive-anime</span><span class="hljs-selector-class">.jp</span><br><span class="hljs-number">6</span>) tidal<span class="hljs-selector-class">.com</span><br><span class="hljs-number">7</span>) zoro<span class="hljs-selector-class">.to</span><br><span class="hljs-number">8</span>) www<span class="hljs-selector-class">.pixiv</span><span class="hljs-selector-class">.co</span><span class="hljs-selector-class">.jp</span><br><span class="hljs-number">9</span>) mxj<span class="hljs-selector-class">.myanimelist</span><span class="hljs-selector-class">.net</span><br><span class="hljs-number">10</span>) mora<span class="hljs-selector-class">.jp</span><br><span class="hljs-number">11</span>) www<span class="hljs-selector-class">.j-wave</span><span class="hljs-selector-class">.co</span><span class="hljs-selector-class">.jp</span><br><span class="hljs-number">12</span>) www<span class="hljs-selector-class">.dmm</span><span class="hljs-selector-class">.com</span><br><span class="hljs-number">13</span>) booth<span class="hljs-selector-class">.pm</span><br><span class="hljs-number">14</span>) www<span class="hljs-selector-class">.ivi</span><span class="hljs-selector-class">.tv</span><br><span class="hljs-number">15</span>) fmovies.to/home<br><span class="hljs-number">16</span>) www<span class="hljs-selector-class">.leercapitulo</span><span class="hljs-selector-class">.com</span><br><span class="hljs-number">17</span>) www<span class="hljs-selector-class">.sky</span><span class="hljs-selector-class">.it</span><br><span class="hljs-number">18</span>) www<span class="hljs-selector-class">.sky</span><span class="hljs-selector-class">.com</span><br><span class="hljs-number">19</span>) www<span class="hljs-selector-class">.smdyy</span><span class="hljs-selector-class">.cc</span><br><span class="hljs-number">20</span>) www<span class="hljs-selector-class">.telecinco</span><span class="hljs-selector-class">.es</span><br>请选择你的 dest, 当前默认使用 <span class="hljs-string">&quot;learn.microsoft.com&quot;</span>, 自填选 <span class="hljs-number">0</span>:<br></code></pre></td></tr></table></figure><blockquote><p>选择站点其实还有一些讲究，可以去看<a href="https://github.com/XTLS/REALITY">官方项目说明</a>，这里就不细说了。</p></blockquote><p>问是否确认用这个网址，输入 <code>y</code> 回车，就是 yes 同意确认的意思。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">是否使用 dest: <span class="hljs-string">&quot;www.lovelive-anime.jp&quot;</span> [y/n]<br></code></pre></td></tr></table></figure><p>程序继续安装出现下面界面就完成了，里面是你的配置信息，最后一行问你是否生成分享链接，当然是 <code>y</code> 要生成，手动填写配置多累。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[信息] 已重启 xray 服务<br>--------------<span class="hljs-built_in"> client config </span>--------------<span class="hljs-built_in"></span><br><span class="hljs-built_in">address </span>    : <span class="hljs-string">&quot;45.32.50.85&quot;</span><span class="hljs-built_in"></span><br><span class="hljs-built_in">port </span>       : 443<br>protocol    : <span class="hljs-string">&quot;vless&quot;</span><br>id          : <span class="hljs-string">&quot;422939fd-f699-4a26-a6d7-61e17ee3dd88&quot;</span><br>flow        : <span class="hljs-string">&quot;xtls-rprx-vision&quot;</span><span class="hljs-built_in"></span><br><span class="hljs-built_in">network </span>    : <span class="hljs-string">&quot;tcp&quot;</span><br>TLS         : <span class="hljs-string">&quot;reality&quot;</span><br>SNI         : <span class="hljs-string">&quot;lovelive-anime.jp&quot;</span>,<span class="hljs-string">&quot;www.lovelive-anime.jp&quot;</span><br>Fingerprint : <span class="hljs-string">&quot;chrome&quot;</span><br>PublicKey   : <span class="hljs-string">&quot;LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA&quot;</span><br>ShortId     : <span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;6d&quot;</span>,<span class="hljs-string">&quot;85dd&quot;</span>,<span class="hljs-string">&quot;e04cccd5&quot;</span>,<span class="hljs-string">&quot;5042dcec226b1621&quot;</span><br>SpiderX     : <span class="hljs-string">&quot;/&quot;</span><br>------------------------------------------<br>是否生成分享链接[y/n]:<br></code></pre></td></tr></table></figure><p>这里问你要选哪个 UUID 的配置，只有一个选项自然填 <code>1</code> ，也可以不填，使用“默认全选”直接回车。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs subunit">1) 422939fd-f699<span class="hljs-string">-4</span>a26-a6d7<span class="hljs-string">-61</span>e17ee3dd88<br>请选择生成分享链接的 UUID ，用英文逗号分隔， 默认全选:<br></code></pre></td></tr></table></figure><p>让你选网址，虽然之前只设置了一个网址，不过这里拆分成带和不带 <code>www</code> 两种，也不填直接回车默认全选。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-number">1</span>) lovelive-anime<span class="hljs-selector-class">.jp</span><br><span class="hljs-number">2</span>) www<span class="hljs-selector-class">.lovelive-anime</span><span class="hljs-selector-class">.jp</span><br>请选择生成分享链接的 serverName ，用英文逗号分隔， 默认全选:<br></code></pre></td></tr></table></figure><p>让选 shortId，这个脚本默认生成了 5 个 shortId，还是不填直接回车。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-number">1</span>) <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-number">2</span>) <span class="hljs-string">&quot;6d&quot;</span><br><span class="hljs-number">3</span>) <span class="hljs-string">&quot;85dd&quot;</span><br><span class="hljs-number">4</span>) <span class="hljs-string">&quot;e04cccd5&quot;</span><br><span class="hljs-number">5</span>) <span class="hljs-string">&quot;5042dcec226b1621&quot;</span><br>请选择生成分享链接的 <span class="hljs-keyword">shortId </span>，用英文逗号分隔， 默认全选:<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>如果想自己设定 shortId 要遵循规则，可以使用十六进制：也就是这些数字和字母 <code>0123456789abcdef</code>，长度要求是 2 的倍数，不能写 3 位、5 位这种数字字母组合，长度最长到 16 位。</p>          </div><p>🎉大功告成！出现如下共 10 个分享链接。随便复制一个到本地 v2rayN 客户端上粘贴就可以用了，注意分享链接开头是 <code>Vless://</code>，结尾是 <code>VLESS-XTLS-uTLS-REALITY</code>。SSH 窗口如果开的小，可能看起来比较乱别把下一行给复制进去了。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sas">--------------- share <span class="hljs-keyword">link</span> ---------------<br>---------- serverName sni=www.lovelive-anime.jp ----------<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=www.lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F<span class="hljs-variable">&amp;sid</span>=85dd#VLESS-XTLS-uTLS-REALITY<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=www.lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F<span class="hljs-variable">&amp;sid</span>=5042dcec226b1621#VLESS-XTLS-uTLS-REALITY<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=www.lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F<span class="hljs-variable">&amp;sid</span>=6d#VLESS-XTLS-uTLS-REALITY<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=www.lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F#VLESS-XTLS-uTLS-REALITY<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=www.lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F<span class="hljs-variable">&amp;sid</span>=e04cccd5#VLESS-XTLS-uTLS-REALITY<br>------------------------------------------------<br>---------- serverName sni=lovelive-anime.jp ----------<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F<span class="hljs-variable">&amp;sid</span>=85dd#VLESS-XTLS-uTLS-REALITY<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F<span class="hljs-variable">&amp;sid</span>=5042dcec226b1621#VLESS-XTLS-uTLS-REALITY<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F<span class="hljs-variable">&amp;sid</span>=6d#VLESS-XTLS-uTLS-REALITY<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F#VLESS-XTLS-uTLS-REALITY<br>vless://422939fd-f699-4a26-a6d7-61e17ee3dd88@45.32.50.85:443?security=reality<span class="hljs-variable">&amp;flow</span>=xtls-rprx-vision<span class="hljs-variable">&amp;fp</span>=chrome<span class="hljs-variable">&amp;pbk</span>=LRrsQXaa2O2LWICHuZ9rY3vq9mC7m2iHxjLEikS3xBA<span class="hljs-variable">&amp;sni</span>=lovelive-anime.jp<span class="hljs-variable">&amp;spx</span>=%2F<span class="hljs-variable">&amp;sid</span>=e04cccd5#VLESS-XTLS-uTLS-REALITY<br></code></pre></td></tr></table></figure><p>为什么会有 10 个分享链接，主要是 2 个网址共用 5 个 shortId 就成 10 个了。有点像是多用户配置，一个 shortId 就是一个配置。不过你可以回去看下这 5 个 shortId 第一个 <code>&quot;&quot;</code> 这个双引号里没内容，也就是客户端这个配置不填也能用，所以要跟外人合用，建议删了这个值。以后不让他用就把他使用的值改了，不用担心他 shortId 留空还能用。删除空值不能用脚本管理界面的 <code>修改 shortIds</code> 一项，它会删除原来所有值替换成你修改的，而且默认还是会生成空值。要想删除空值可以手动修改配置文件，路径是 <code>/usr/local/etc/xray/config.json</code>，改完在脚本管理界面重启下就可以了，具体操作这里不废话了，可以问 NewBing。</p><h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><div class="note note-info">            <p><strong>REALITY 这个新协议对客户端和内核是有要求的</strong></p><ul><li>Windows 端 v2rayN 至少要 v6.21 以上版本</li><li>安卓端 v2rayNG要 1.8.0 及以上版本</li><li>iPhone 端不清楚，自行查阅。</li></ul>          </div><h3 id="PC-端-v2rayN-配置"><a href="#PC-端-v2rayN-配置" class="headerlink" title="PC 端 v2rayN 配置"></a>PC 端 v2rayN 配置</h3><p><a href="https://github.com/2dust/v2rayN/releases">点我进入 v2rayN 下载页面</a> ，写文章当下 v6.21 以上版本全是先行版本，最新版本是 v6.23，就选它好了。点开 Assets 下载下方的 <code>v2rayN-With-Core.zip</code>，解压出来即可使用无需安装，可以先将解压后的文件夹找个地方放好。</p><p><img src="https://mdzz.cf/images/2023/04/30/REALITY_02.jpg" alt="REALITY_02.jpg"></p><p>打开文件夹，双击里面的 <code>v2rayN.exe</code> 即可运行，运行后窗口闪一下就消失了，去右下角托盘图标里找到它。先右键图标在菜单 <code>自动配置系统代理</code> 打上勾，并确保路由是 <code>绕过大陆</code>。</p><p><img src="https://mdzz.cf/images/2023/04/30/REALITY_03.jpg" alt="REALITY_03.jpg"></p><p>再双击图标打开界面，开始里面是空白没有配置的，将你上面生成的分享链接复制，然后直接在这个界面 <code>Cltr+V</code> 粘贴就可以添加配置了，如果没有复制进来要检查下是否漏了或多复制了内容。然后可以打开浏览器访问被墙网站看能不能上，也可以在配置文件上右键使用 <code>测试服务器速度</code> 看看能不能跑起来。如果没用且之前杀毒软件有拦截提示之类，可以尝试将 v2rayNG 所在目录加入白名单。</p><p><img src="https://mdzz.cf/images/2023/04/30/REALITY_04.jpg" alt="REALITY_04.jpg"></p><h3 id="安卓端-v2rayNG-配置"><a href="#安卓端-v2rayNG-配置" class="headerlink" title="安卓端 v2rayNG 配置"></a>安卓端 v2rayNG 配置</h3><p><a href="https://github.com/2dust/v2rayNG/releases">点我进入 v2rayNG 下载页面</a>，当前最新版本为 1.8.4，点开 Assets 下载下方的 <code>v2rayNG_1.8.4.apk</code>。</p><p><img src="https://mdzz.cf/images/2023/04/30/REALITY_05.jpg" alt="REALITY_05.jpg"></p><p>手机上安装后打开应用，点击右上角 <code>+</code> 图标， 虽然也有 <code>从剪贴板导入</code> 选项，不过无论是服务器上的分享链接还是从 v2rayN 复制分享链接都不行，估计是格式不兼容。只能手动或者扫码添加，要生成二维码，可以在 v2rayN 配置上右键点击 <code>分享服务器(Ctrl+F)</code> 。</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://mdzz.cf/images/2023/04/30/REALITY_06.jpg" alt="REALITY_06.jpg"></div><div class="group-image-wrap"><img src="https://mdzz.cf/images/2023/04/30/REALITY_07.jpg" alt="REALITY_07.jpg"></div></div></div><div class="note note-info">            <p>本文章主要目的是讲解一键脚本安装和使用，其它零零散散的功能这里就不说了，也很难一篇说清楚，东扯西拉只会让文章变的更混乱，感兴趣请自行网上查阅。</p>          </div><blockquote><p><strong>其它教辅资料</strong></p><ul><li><a href="https://github.com/XTLS">XTLS 官方 GitHub 项目</a></li><li><a href="https://github.com/zxcvos/Xray-script">本教程使用的 Xray-REALITY 一键脚本项目</a></li><li><a href="https://xtls.github.io/document/level-0">官方小小白白话文</a>：这是XTLS 官方最基础的手搓教程，有很多 Linux 系统基础的说明，初次使用 VPS 的小白有空可以试试这个教程，相信一定对你帮助很大。</li></ul></blockquote>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Xray</tag>
      
      <tag>REALITY</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-Fluid 自用样式 (custom.css)</title>
    <link href="/fluid_css/"/>
    <url>/fluid_css/</url>
    
    <content type="html"><![CDATA[<p>关于自定义样式，请参考 <a href="https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">Fluid 官方文档</a></p><div class="note note-info">            <p>部分样式还需要修改其它文件<br>直接能用的：<strong>表格样式、超链接默认下划线、块引用</strong></p>          </div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 暗中观察 */</span><br><span class="hljs-selector-id">#background-image</span> &#123;<br>    <span class="hljs-attribute">position</span>: fixed;<br>    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">280px</span>;<br>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">4</span>;<br>&#125;<br><br><span class="hljs-comment">/* 表格中的偶数行具有背景色 */</span><br><span class="hljs-selector-attr">[data-user-color-scheme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">tr</span><span class="hljs-selector-pseudo">:nth-child</span>(even) <span class="hljs-selector-tag">td</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">27</span>,<span class="hljs-number">31</span>,<span class="hljs-number">35</span>,<span class="hljs-number">0.5</span>);<br>&#125;<br><br><span class="hljs-selector-attr">[data-user-color-scheme=<span class="hljs-string">&quot;light&quot;</span>]</span> <span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">tr</span><span class="hljs-selector-pseudo">:nth-child</span>(even) <span class="hljs-selector-tag">td</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">27</span>,<span class="hljs-number">31</span>,<span class="hljs-number">35</span>,<span class="hljs-number">0.05</span>);<br>&#125;<br><br><span class="hljs-comment">/* 表格中标题栏背景色和文字颜色 */</span><br><span class="hljs-selector-attr">[data-user-color-scheme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">th</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#1589e9</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br><span class="hljs-selector-attr">[data-user-color-scheme=<span class="hljs-string">&quot;light&quot;</span>]</span> <span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">th</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#0366d6</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br><span class="hljs-comment">/* 超链接默认启用下划线，鼠标悬停下划线消失 */</span><br><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">a</span> &#123;<br>    <span class="hljs-attribute">text-decoration</span>: underline;<br>&#125;<br><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">text-decoration</span>: none;<br>&#125;<br><br><span class="hljs-comment">/* banner 网点覆盖 */</span><br><span class="hljs-selector-class">.banner</span> <span class="hljs-selector-class">.mask</span> &#123;<br><span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/overlay_dot_ptn_0.6.png</span>);<br>&#125;<br><br><span class="hljs-comment">/* 块引用样式 */</span><br><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">blockquote</span>&#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--post-text-color);<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">1.45rem</span> <span class="hljs-number">1.25rem</span> <span class="hljs-number">1.45rem</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> double <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">1</span>);<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">27</span>,<span class="hljs-number">31</span>,<span class="hljs-number">35</span>,<span class="hljs-number">0.05</span>);<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0.25rem</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">1.8rem</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-attr">[data-user-color-scheme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">blockquote</span>&#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> double <span class="hljs-built_in">rgb</span>(<span class="hljs-number">128</span> <span class="hljs-number">128</span> <span class="hljs-number">128</span> / <span class="hljs-number">30%</span>);<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">62</span>,<span class="hljs-number">75</span>,<span class="hljs-number">94</span>,<span class="hljs-number">0.35</span>);<br>&#125;<br><br><span class="hljs-comment">/* 排版 */</span><br><span class="hljs-selector-class">.markdown-body</span> &#123;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.9rem</span>;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">2rem</span>;<br>&#125;<br><br><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-class">.highlight</span> &#123;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">28px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">figure</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">1.5rem</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">img</span>, <span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">a</span> &gt; <span class="hljs-selector-tag">img</span>, <span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">figure</span> &gt; <span class="hljs-selector-tag">img</span>, <span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">figure</span> &gt; <span class="hljs-selector-tag">a</span> &gt; <span class="hljs-selector-tag">img</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">2rem</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.note</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.85rem</span> <span class="hljs-number">1.1rem</span> <span class="hljs-number">0.85rem</span> <span class="hljs-number">1.1rem</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Fluid 主题自定义</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Aria2服务器端使用技巧和问题整理</title>
    <link href="/aria2-faq/"/>
    <url>/aria2-faq/</url>
    
    <content type="html"><![CDATA[<p>旧文章待更新</p><h1 id="PT注意事项"><a href="#PT注意事项" class="headerlink" title="PT注意事项"></a>PT注意事项</h1><p>PT站有各种考核，所以需要额外的一些设置，编辑你的 <code>aria2.conf</code> 配置文件，在 <code>##BT/PT下载相关##</code> 这个类别下，部分选项请参考如下设置，最后一项分享率根据你的站点考核自行设置。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 打开DHT功能, PT需要禁用, 默认:true</span><br><span class="hljs-attr">enable-dht</span>=<span class="hljs-literal">false</span><br><span class="hljs-comment"># 打开IPv6 DHT功能, PT需要禁用</span><br><span class="hljs-attr">enable-dht6</span>=<span class="hljs-literal">false</span><br><span class="hljs-comment"># 本地节点查找, PT需要禁用, 默认:false</span><br><span class="hljs-attr">bt-enable-lpd</span>=<span class="hljs-literal">false</span><br><span class="hljs-comment"># 种子交换, PT需要禁用, 默认:true</span><br><span class="hljs-attr">enable-peer-exchange</span>=<span class="hljs-literal">false</span><br><span class="hljs-comment"># 每个种子限速, 对少种的PT很有用, 默认:50K</span><br><span class="hljs-comment">#bt-request-peer-speed-limit=50K</span><br><span class="hljs-comment"># 客户端伪装, PT需要</span><br><span class="hljs-attr">peer-id-prefix</span>=-TR2770-<br><span class="hljs-attr">user-agent</span>=Transmission/<span class="hljs-number">2.77</span><br><span class="hljs-comment"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span><br><span class="hljs-attr">seed-ratio</span>=<span class="hljs-number">2.0</span><br></code></pre></td></tr></table></figure><p>设置完记得重启下 aria2 使其生效。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-regexp">/etc/</span><span class="hljs-keyword">init</span>.d<span class="hljs-operator">/</span>aria2 restart<br></code></pre></td></tr></table></figure><h1 id="网盘互拷"><a href="#网盘互拷" class="headerlink" title="网盘互拷"></a>网盘互拷</h1><p>先来看网盘互拷，跟手动上传操作差不多。如果担心自己撸的 5T OneDrive 或无限 Google Drive 会随时扑街，就搞两个网盘互相对拷，总不能两个一起死吧。<br>我们可以再次配置 Rclone，比如我给第二个配置命名为 <code>remote2</code>，只是想手动上传的不用配置第二个。<br>还有一个问题就是拷贝一般是手动执行，且时间可能会很长，如果拷贝过程中关闭SSH客户端会导致拷贝中断，所以先安装下<code>screen</code>，通过 screen 来进行拷贝，就算关闭 SSH 客户端就不会造成任务中断了。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">yum <span class="hljs-keyword">install </span>-y <span class="hljs-keyword">screen </span> <span class="hljs-comment">#红帽系</span><br>apt <span class="hljs-keyword">install </span>-y <span class="hljs-keyword">screen </span> <span class="hljs-comment">#Debian系</span><br></code></pre></td></tr></table></figure><p>screen 安装好后，也绑定了二个网盘，这时我要将 <code>**remote** 这个配置关联的 OneDrive 里的 **backup** 目录下的文件拷贝到 **remote2** 配置关联的 OneDrive 里的 **backup** 目录下的文件</code>， 只需要执行以下命令即可。目录要跟你的对上。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">screen </span>-L rclone copy -v remote:<span class="hljs-keyword">backup </span>remote2:<span class="hljs-keyword">backup</span><br></code></pre></td></tr></table></figure><p>上面代码的大致意思</p><blockquote><ul><li><p><code>screen</code><br>在新建的screen窗口下运行命令（这样关闭ssh窗口也不会导致任务中断）</p></li><li><p><code>-L</code><br>在当前目录生成屏幕完整日志文件（如果第二次运行screen产生的日志文件会在以前的日志文件下面延续）</p></li><li><p><code>rclone</code><br>使用rclone命令</p></li><li><p><code>copy</code><br>复制，也就是 A 网盘文件复制到B网盘然后两个网盘都保留有这个文件，如果要 A 到 B 后就只有 B 网盘留有这个文件，则将copy 改为 move</p></li><li><p><code>-v</code><br>rclone在拷贝或移动时会显示进度过程，前面 screen -L 是将这个同步进度保存为日志文件，方便同步失败的时候查看原因</p></li><li><p><code>remote:backup remote2:backup</code><br>将remote网盘配置下的backup文件夹（拷贝或移动到）remote2 网盘配置下的 backup 目录，如果你想更进一步只针对网盘 backup 文件夹内的 2ha.txt 单个文件时，就这样写 remote:backup&#x2F;2ha.txt</p></li></ul></blockquote><p> 如果不想手动网盘对拷，可以利用宝塔面板添加 <code>计划任务</code> 来定时对拷文件，将上面那条手动对拷的命令复制到计划任务的脚本内容里保存（如下图，<code>screen -L</code> 就不用加了，计划任务自己会生成日志），然后到了设定的时间就会自动对拷了。</p><p><img src="https://mdzz.cf/images/2023/04/16/aria2_QA_01.jpg" alt="aria2_QA_01.jpg"></p><h1 id="手动上传"><a href="#手动上传" class="headerlink" title="手动上传"></a>手动上传</h1><p>VPS手动上传网盘跟网盘对拷命令格式一样，只要将第一个网盘目录改为VPS上的文件目录，但是需要精确到你要上传的文件或文件夹。但是有些文件名称很长且复杂，比如这样 <code>[Kamigami] Kara no Kyoukai Movie 01 [BD x264 1920x1080 DTS-HD(5.1ch,2.0ch) Sub(Chs,Jap)]</code>，像这种名称带括号空格和逗号的直接复制文件名到 Linux 里是不能识别的，需要在括号空格和逗号前面加入 <code>\</code> 转义它们才行，像这样 <code>\[Kamigami\]\ Kara\ no\ Kyoukai\ Movie\ 01\ \[BD\ x264\ 1920x1080\ DTS-HD\(5.1ch\,2.0ch\)\ Sub\(Chs\,Jap\)\]</code>，手动加 <code>\</code> 麻烦还容易出错。</p><p>不过可以利用自动输入，例如还是这个文件名，通过先输入 <code>\[Ka</code> 然后按下键盘 <code>Tab 键</code> 就会自动补齐后面文件名，如果类似文件名有很多，比如我上面的例子是某动画第一集，如果还有 02、03 集的文件，使用自动补齐只会补到集数的 0 为止，后面手动输入数字后就可以再按 Tab 键自动补齐了。还有一种更简单的方式就是用双引号 <code>&quot;filename&quot;</code> 把这种带空格、括号、逗号的文件名包括起来，但是某些字符（如$和&#96;）仍然需要转义。</p><div class="note note-info">            <p><font size=3><strong>关于 Screen 和 Rclone 更多参数设置请查看官方文档</strong></font></p><ul><li>Screen官方文档： <a href="https://www.gnu.org/software/screen/manual/screen.html">https://www.gnu.org/software/screen/manual/screen.html</a></li><li>Rclone官方文档：<a href="https://rclone.org/docs/">https://rclone.org/docs/</a></li></ul>          </div><h1 id="清理日志文件"><a href="#清理日志文件" class="headerlink" title="清理日志文件"></a>清理日志文件</h1><p>自动上传和利用 screen 上传产生的日志文件随着下载上传量增加会越来越大，这两个日志的位置分别位于 <code>/root/.aria2/aria2.log</code> 和 <code>/root/screenlog.0</code> ，过大会无法在线查看，需要下到本地查看，且内容过长不易审阅。</p><p>要清理同样可以利用宝塔面板里的计划任务，比如清理 aria2.log 的脚本内容如下，清理 screenlog.0 的话只要改下代码后面文件目录即可。建议周期不要太短，否则下载或同步出错想看日志都没得看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /dev/null &gt; /root/.aria2/aria2.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><h1 id="下载大于服务器硬盘容量的文件合集"><a href="#下载大于服务器硬盘容量的文件合集" class="headerlink" title="下载大于服务器硬盘容量的文件合集"></a>下载大于服务器硬盘容量的文件合集</h1><p>注意是文件合集，如果单个文件超过剩余硬盘容量是没法下载的。假如你要下一个 110G 的视频合集，合集包含 2 个视频，每个视频 55G，但是你 VPS 硬盘容量只剩 60G 了。这种我们可以先添加任务，然后暂停这个任务，点击 <code>N 个文件</code> 进入任务详情。</p><p><img src="https://mdzz.cf/images/2023/04/16/aria2_QA_02.jpg" alt="aria2_QA_02.jpg"></p><p>进入文件列表，然后根据剩余硬盘大小勾选部分文件下载。</p><p><img src="https://mdzz.cf/images/2023/04/16/aria2_QA_03.jpg" alt="aria2_QA_03.jpg"></p><p>点击 <code>选择文件</code> 可以根据文件类型进行快速选择（无意中发现这个可以点😓）。</p><p><img src="https://mdzz.cf/images/2023/04/16/aria2_QA_04.jpg" alt="aria2_QA_04.jpg"></p><p>还有一个问题就是可能添加超过硬盘大小的任务时会直接失败，根本没法先暂停任务，也就没法进行部分文件选择。解决这个问题需要修改 aira2.conf 配置文件，在 <code>## 文件保存相关 ##</code> 这类里找到 <code>文件预分配方式</code>，可以搜索这部分 <code>file-allocation=</code>，把值修改为trunc（如下），前面如果有 # 记得去掉前面 # 使其生效，同样不要忘记保存配置文件后重启 aria2。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">file-allocation</span><span class="hljs-operator">=</span>trunc<br></code></pre></td></tr></table></figure><h1 id="OneDrive-被墙免代理直连下载"><a href="#OneDrive-被墙免代理直连下载" class="headerlink" title="OneDrive 被墙免代理直连下载"></a>OneDrive 被墙免代理直连下载</h1><p>有些地区宽带运营商会把 OneDrive 给墙了，本地无法直连登录和下载，得挂代理才能下载（某种意义上还不如挂代理从服务器上下载更方便）。这时可以采用迂回战术，先注册个 <a href="https://k00.fr/kgaes2wa">koofr</a> 网盘（德国的），这个网盘免费空间只有 2G，不过没关系，我们主要用它绑定 OneDrive，然后就可以在这里免代理直连下载 OneDrive 的文件（生成的下载链接变成 app.koofr.net 开头的）。</p><p><img src="https://mdzz.cf/images/2023/04/16/aria2_QA_05.jpg" alt="aria2_QA_05.jpg"></p><h1 id="单个大文件分卷上传"><a href="#单个大文件分卷上传" class="headerlink" title="单个大文件分卷上传"></a>单个大文件分卷上传</h1><p>其实挂载网盘真的没啥必要，直接从服务器下回本地最好，如果网络可以的话，分卷上传属于下下策。OneDrive 是有单个文件大小上传限制的，单个文件超过 15G 不能上传。像 4K 原盘、Remux 这类影片基本都会超过这个大小。这时就得在服务器上对大文件进行分卷压缩然后上传网盘，因为是要下到 PC 上用，所以用 zip 来压缩，但是 linux 压缩 zip 得分两次，一次是先将文件压成一个 zip，然后分卷这个 zip，所以如果你要分卷一个 40G 的源文件，服务器剩余硬盘空间最少要有 80G。</p><p>根据 Linux 发行版选下面一个命令安装 zip</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y unzip zip <span class="hljs-comment">#红帽系</span><br>apt <span class="hljs-keyword">install</span> -y unzip zip <span class="hljs-comment">#Debian系</span><br></code></pre></td></tr></table></figure><p>这样就能使用zip压缩了，接着假设你要压缩的文件名为 <code>2ha.iso</code>，这个文件大小为 <code>40G</code>，位于 <code>/data/download/</code> 这个目录，准备将他分卷成 <code>5G</code> 大小的 <code>8</code> 个文件，参考操作如下。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">cd</span> /data/download  #先进入这个目录位置<br><span class="hljs-keyword">zip</span> -r name.<span class="hljs-keyword">zip</span> 2ha.iso  #将 2ha.iso 压缩成一个 name.<span class="hljs-keyword">zip</span><br><span class="hljs-keyword">zip</span> -s 5G name.<span class="hljs-keyword">zip</span> --<span class="hljs-keyword">out</span> name2.<span class="hljs-keyword">zip</span>  #将 name.<span class="hljs-keyword">zip</span> 按 5G 大小分卷压缩，分卷名称为 name2，不要跟单个 <span class="hljs-keyword">zip</span> 同名<br></code></pre></td></tr></table></figure><p>上面分卷使用的单位除了 G 也可以用 M。将分卷上传到网盘，再从网盘将所有分卷下载到电脑后，放在同个文件夹，然后同时解压就出来 2ha.iso 了。</p><h1 id="给AriaNg面板添加文件管理选项"><a href="#给AriaNg面板添加文件管理选项" class="headerlink" title="给AriaNg面板添加文件管理选项"></a>给AriaNg面板添加文件管理选项</h1><p>因为经常会用到文件管理，每次手动输入网址挺麻烦的，干脆在 AriaNg 的界面加一个文件管理选项，效果如下。</p><p><img src="https://mdzz.cf/images/2023/04/16/aria2_QA_06.jpg" alt="aria2_QA_06.jpg"></p><p>要添加选项你得编辑 AriaNg 目录（就是安装教程里宝塔 <code>站点</code> 的目录 ）下的 <code>index.html</code>（修改之前建议你先备份一下），点开编辑后会发现排版挤在一起很乱不容易找，这里用搜索定位，因为是要在 <code>Aria2 状态</code> 选项下面新增选项，所以搜索 <code>Aria2 Status</code>，大致内容如下。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-href-match</span>=<span class="hljs-string">&quot;/status&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#!/status&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;label pull-right&quot;</span> <span class="hljs-attr">ng-if</span>=<span class="hljs-string">&quot;globalStatusContext.isEnabled || isCurrentRpcUseWebSocket&quot;</span> <span class="hljs-attr">ng-class</span>=<span class="hljs-string">&quot;</span></span></span><span class="hljs-template-variable">&#123;&#x27;label-primary&#x27;: taskContext.rpcStatus === &#x27;Connecting&#x27;, &#x27;label-success&#x27;: taskContext.rpcStatus === &#x27;Connected&#x27;, &#x27;label-danger&#x27;: taskContext.rpcStatus === &#x27;Disconnected&#x27;&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span> <span class="hljs-attr">ng-bind</span>=<span class="hljs-string">&quot;taskContext.rpcStatus | translate&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> </span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-server&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">translate</span>&gt;</span>Aria2 Status<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>找到 Aria2 Status 的 li 标签结尾，也就是 <code>&lt;/li&gt;</code>，在这后面加入如下代码，注意下面代码里面的 <code>http://IP:8080</code>，将这个地址改为你 FileBrowser 的地址。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-href-match</span>=<span class="hljs-string">&quot;/file&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://IP:8080&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-folder&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">translate</span>&gt;</span>文件管理<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br></code></pre></td></tr></table></figure><p>保存后刷新下你的AriaNg界面应该就能看到这个选项了，如果没出现清理下浏览器缓存再刷新试试。</p><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><blockquote><ol><li><strong>下载完成会占用VPS空间吗</strong><br>要等完全上传到网盘上后就不占用VPS空间了，你也可以在文件管理下对不需要的文件进行删除。</li></ol></blockquote><blockquote><ol start="2"><li><strong>文件下载100％完成了，没有上传到OneDrive网盘</strong><br>文件要从 <code>正在下载</code> 进入 <code>已完成</code> 才会触发上传脚本，有时“正在下载”显示100％完成了也不会马上进入“已完成”，因为BT要做种，我也不建议图自己方便将分享率设0。看看国内BT环境，既然出来下BT，本着你好我好大家好的原则，建议最小也设置个1.1（比下载多上传0.1的数据），做种时不会自动上传可以使用上面手动上传的方案，注意用 <code>copy</code> 不要用 <code>move</code>，用 move 传完会把你服务器文件删了，影响你做种率（PT的尤为注意）。</li></ol></blockquote><blockquote><ol start="3"><li><strong>上传总是失败，OneDrive下生成一大堆TMP临时文件</strong><br>VPS内存太小（一般发生在 512M 的小鸡上）导致的上传崩溃，你可以在 rclone 手动上传命令后面加入 <code>--buffer-size=8M</code>（buffer-size默认是16M）或者加入 <code>--transfers=3</code>（同时上传数3，默认是4）<br>有时候上传太频繁也会导致失败，可以先等会再手动上传，或加入 <code>--tpslimit 1</code> 就不会那么容易失败了（玄学）。</li></ol></blockquote>]]></content>
    
    
    <categories>
      
      <category>玩转 VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Aria2</tag>
      
      <tag>离线下载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>G口无限流量的大盘鸡 FranTech(BuyVM) 购买教程</title>
    <link href="/buyvm-frantech/"/>
    <url>/buyvm-frantech/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p><strong>新手建言：</strong>如果你是完全的小白，从没接触过 VPS，个人建议你可以先去白嫖 Vultr 的机子，有新人 250 美金一个月的试用，可参考这篇<a href="https://oooutman.github.io/Vultr_free_250"><strong>Vultr 新人免费250美金试用教程</strong></a>，不过 Vultr 的教程没写硬盘挂载，只说了实例部署，就相当于这里的切片购买， Vultr 也有块存储，1 美元&#x2F;40G，太贵了，只有白嫖才能玩玩，练完手再换 FranTech 就行。</p>          </div><p>FranTech 是加拿大老牌服务商，成立于 2010 年的，它还有个名字是 BuyVM ，BuyVM 这个网站更像宣传介绍的，购买则在 FranTech 。他家最大优点就是无限流量，缺点也和多数大盘鸡差不多，延迟不好看，ping 值好点也有 300+，不太适合科学上网，用也能用，YouTube 1080P问题不大，还能上 NewBing（现在叫Copilot了） 和 ChatGPT ，做个备用梯也不错。最适合还得是搞私有云离线下载，国外良好的 BT 环境和不限流大硬盘服务器 24 小时不间断下载，追剧看番美滋滋。</p><div class="note note-warning">            <p><font size=3 color=#f0ad4e><strong>由于订单人工审核，有时不能及时开通服务器属于正常现象，看下他们上班时间，下单会有邮件提醒</strong></font></p><ul><li>周一至周五，GMT-7 的早上 8 点至下午 5 点，相当于我们的晚上 11 点至次日上午 8 点</li><li>周六，GMT-7 的早上 9 点至下午 1 点，相当于我们的晚上 12 点至次日凌晨 4 点</li><li>周日和美国节假日休息</li></ul>          </div><h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p>点击注册，能直连就直连，不要走代理访问：<a href="https://my.frantech.ca/aff.php?aff=2940">https://my.frantech.ca</a></p><p><img src="/img/post/BuyVM/frantech_01.jpg" alt="frantech_01.jpg"></p><p>这家服务商欺诈审查较严（不过不像 VirMach 感觉鄙视中国用户），FranTech 以前推出过中国优化 IP 服务，可以看出还是蛮注重中国客户的。<code>只要注意三点基本没事：1.不要走代理；2.地址填写不要离你的 IP 所在地太远，建议不要出省；3.邮箱要真实，不要用临时邮箱。</code>姓名随便整个拼音中文名，电话选中国 +86 的，不会给你发短信号码可以不用真，以后会不会就不清楚了，自己判断；国家省份城市要跟你的 IP 所在地不要偏离太远，街道住址随便写个你 IP 所在城市某个街道或小区就行。如果真的要用梯子也因为用了梯子导致被判定欺诈，可以给客服发个工单说下原因，比如你不用梯子打不开网站之类的客服会帮你处理的。</p><p>其它信息填完点注册即可。注册完好像有邮箱验证，记不清了，注意看提示。</p><p><img src="/img/post/BuyVM/frantech_02.jpg" alt="frantech_02.jpg"></p><h1 id="选购"><a href="#选购" class="headerlink" title="选购"></a>选购</h1><p><img src="/img/post/BuyVM/frantech_03.jpg" alt="frantech_03.jpg"></p><p>商店页面如下图，虽然是显示 USD 美元，实际支付宝付款时是 CAD 加元，汇率 1:5 左右，比美元划算。<br>买前先看下 KVM 切片和块存储是否都有货，因为经常缺货。现在总共四个地区，以前只有一个拉斯维加斯，必须位于同个地区切片才能挂载块存储硬盘。现在切片最低是 3.5 加元&#x2F;月，以前有 2 加元（现在又有了(ˉ▽ˉ；)…）。</p><p><img src="/img/post/BuyVM/frantech_04.jpg" alt="frantech_04.jpg"></p><p>块存储最低 1.25加元&#x2F;256G&#x2F;月，加上 2 的切片，合计 3.25 加元&#x2F;月（人民币17块左右）。</p><p><img src="/img/post/BuyVM/frantech_05.jpg" alt="frantech_05.jpg"></p><p>建议单月购买，防止意外下车，就是频繁续费有点烦，按季付费也可以。不要公开做盗版影视站点，自己下下 BT 问题不大。</p><div class="note note-info">            <p>以前是自然月计费，现在好像不是了，自然月计费是在每月 20 号前购买单月，会在下个月 1 号到期，时间不足一月结算价会低于 3.5；如果是 20 号后购买单月，则是到下下个月 1 号到期，结算价会超过 3.5 的价格。这种计费方式有个缺点，会导致当月到期的都聚集在月初，短时间空出一批机子，缺货的时候没货，有货又要卖好几天，资源利用效率偏低。</p>          </div><p>选好购买时长、系统、填写服务器名称（名称随意），然后右侧点击继续就可以提交到购物车了。</p><p><img src="/img/post/BuyVM/frantech_06.jpg" alt="frantech_06.jpg"></p><p>进购物车再核对下信息，无误选择支付方式付款即可。付款后注意查看邮件，现在跟以前有点不同（以前系统是要另外安装的，而且在上一步填写服务器名称边上有个 root 密码填写框），现在 root 密码应该是发邮件给你。</p><p><img src="/img/post/BuyVM/frantech_07.jpg" alt="frantech_07.jpg"></p><h1 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h1><p>块存储的购买过程差不多我就不复述了。付款后可以在我的服务里面查看你购买的VPS，但是这里只能查看简单的状态，管理后台要从主菜单 <code>Stallion</code> 进入，Stallion 翻译过来是种马，意思是很能干吗🤔</p><p><img src="/img/post/BuyVM/frantech_08.jpg" alt="frantech_08.jpg"></p><p><code>Stallion</code>登录界面</p><p><img src="/img/post/BuyVM/frantech_09.jpg" alt="frantech_09.jpg"></p><p>登录进来默认是在虚拟服务器界面，我这里是有两个机子，点击 <code>manage</code> 可以进入服务器管理页面。</p><p><img src="/img/post/BuyVM/frantech_10.jpg" alt="frantech_10.jpg"></p><p>其它设置我就不说了，不懂别动，常用的也就 <code>Reinstall</code> 这个重新安装菜单，这里重装系统可以重新设定 root 密码。还有备份和快照里面的快照可以免费创建 5 个，也实用，其它请自行摸索。  </p><p><img src="/img/post/BuyVM/frantech_11.jpg" alt="frantech_11.jpg"></p><h1 id="挂载块存储"><a href="#挂载块存储" class="headerlink" title="挂载块存储"></a>挂载块存储</h1><p>购买块存储后得先把存储卷附加到切片上，最上面菜单栏点击 <code>Storage Volumes</code> 进入存储卷，点块存储的设置按钮，再点击第二个选项 <code>附加到虚拟服务器</code>，然后会有个弹窗让你选择要附加的服务器。<br>这步操作就好比你买了个新硬盘接上了主机，还需要创建格式化硬盘分区才能完成挂载。</p><p><img src="/img/post/BuyVM/frantech_12.jpg" alt="frantech_12.jpg"></p><p>挂载块存储会有封邮件，里面提到一句话摘录在下面。关键点是 <code>/dev/sd*</code>，这个*号是通配符，好比 D 盘、E 盘这种盘符，自行更改，教程后面使用 sda。</p><div class="note note-info">            <p>All Volumes are attached via hotplug meaning that, at least on Linux, the drive will automatically show up as <code>/dev/sd*</code>. Windows users may need to install Virtio-SCSI drivers to use their volumes.</p><p>机翻：所有卷都通过热插拔连接这意味着，至少在Linux上，驱动器会自动显示为 <code>/dev/sd*</code>。 Windows用户可能需要安装为 Virtio-SCSI 驱动器使用它们的体积。</p>          </div><p>SSH 登录服务器，不会的可看这篇教程：<a href="https://oooutman.github.io/ssh-putty/">SSH客户端—Putty简易使用教程</a><br>一行一个使用下面命令挂载硬盘（注释不用复制）。挂载目录使用的是 <code>/mnt/file</code>，也可以挂载其它已存在目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用 parted 命令创建 GPT 分区表</span><br>parted -s /dev/sda mklabel gpt<br><br><span class="hljs-comment"># 使用 parted 命令创建一个占用整个磁盘的主分区</span><br>parted -s /dev/sda unit mib mkpart primary 0% 100%<br><br><span class="hljs-comment"># 使用 mkfs.ext4 命令在新分区上创建 EXT4 文件系统</span><br>mkfs.ext4 /dev/sda1<br><br><span class="hljs-comment"># 创建挂载点目录</span><br><span class="hljs-built_in">mkdir</span> /mnt/file<br><br><span class="hljs-comment"># 将新分区添加到 /etc/fstab 文件中以便开机自动挂载</span><br><span class="hljs-built_in">echo</span> &gt;&gt; /etc/fstab<br><span class="hljs-built_in">echo</span> /dev/sda1 /mnt/file ext4 defaults,noatime,nofail 0 0 &gt;&gt; /etc/fstab<br><br><span class="hljs-comment"># 挂载新分区</span><br>mount /mnt/file<br></code></pre></td></tr></table></figure><div class="note note-warning">            <p><strong>注意：</strong>如果你要换机子挂载块存储，并要保留块存储内的数据，先去后台分离块存储，再附加到新机子上。上面的挂载命令只需要从 <code>创建挂载点目录</code> 开始执行，前面几行命令就不用了，否则会把硬盘重新格式化一遍，务必注意。</p>          </div><p>最后使用 <code>df -h</code> 命令查看当前磁盘挂载情况，看到其中有 <code>/dev/sda1</code> 这行就大功告成了</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">Filesystem      <span class="hljs-keyword">Size</span>  Used Avail Use% Mounted on<br><span class="hljs-regexp">/dev/</span>sda1       <span class="hljs-number">252</span>G  <span class="hljs-number">177</span>G   <span class="hljs-number">63</span>G  <span class="hljs-number">74</span>% <span class="hljs-regexp">/mnt/</span><span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>VPS 推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vps</tag>
      
      <tag>大盘鸡</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大盘鸡汇总（大硬盘存储型 VPS）</title>
    <link href="/storagevps/"/>
    <url>/storagevps/</url>
    
    <content type="html"><![CDATA[<p>大盘鸡顾名思义就是大硬盘的 vps 主机，对于个人用户来说主要用途就是 BT 下载、自建网盘和图床。优点就是硬盘大，缺点就是这种类型机子一般性能偏弱。</p><hr><ul><li><strong>配置更新于2024-04-23，商家可能随时更改套餐</strong></li></ul><table><thead><tr><th align="center">服务商</th><th align="center">硬盘</th><th align="center">内存</th><th align="center">cpu<br>(vCore)</th><th align="center">带宽<br>(Gbps)</th><th align="center">流量</th><th align="center">IPv4</th><th align="center">IPv6</th><th align="center">类型</th><th align="center">价格</th></tr></thead><tbody><tr><td align="center"><a href="https://my.frantech.ca/aff.php?aff=2940">FranTech</a></td><td align="center">10+256GB<br>(kvm+块存储)</td><td align="center">512MB</td><td align="center">1</td><td align="center">1</td><td align="center">无限</td><td align="center">1</td><td align="center">有</td><td align="center">KVM</td><td align="center">2+1.25<br>(美元)</td></tr><tr><td align="center"><a href="https://billing.virmach.com/aff.php?aff=7514">VirMach</a></td><td align="center">250GB</td><td align="center">512MB</td><td align="center">1</td><td align="center">10</td><td align="center">1TB</td><td align="center">1</td><td align="center">无</td><td align="center">KVM</td><td align="center">3<br>(美元)</td></tr><tr><td align="center"><a href="https://my.letbox.com/aff.php?aff=443">LetBox</a></td><td align="center">250GB</td><td align="center">1GB</td><td align="center">1</td><td align="center">1</td><td align="center">3TB</td><td align="center">1</td><td align="center">有</td><td align="center">KVM</td><td align="center">3<br>(美元)</td></tr><tr><td align="center"><a href="https://hosthatch.com/a?id=1456">HostHatch</a></td><td align="center">1TB</td><td align="center">1GB</td><td align="center">1</td><td align="center">1</td><td align="center">亚太区1TB</td><td align="center">1</td><td align="center">？</td><td align="center">KVM</td><td align="center">5<br>(美元)</td></tr><tr><td align="center"><a href="https://www.smarthost.net/aff.php?aff=71">SmartHost</a></td><td align="center">10+256GB<br>(kvm+块存储)</td><td align="center">1GB</td><td align="center">1</td><td align="center">1</td><td align="center">1TB</td><td align="center">1</td><td align="center">有</td><td align="center">KVM</td><td align="center">3.95<br>(美元)</td></tr><tr><td align="center"><a href="https://greencloudvps.com/billing/store/storage-kvm-sale">Greencloud</a></td><td align="center">200GB</td><td align="center">1GB</td><td align="center">1</td><td align="center">1</td><td align="center">1TB</td><td align="center">1</td><td align="center">有</td><td align="center">KVM</td><td align="center">48年付<br>(美元)</td></tr><tr><td align="center"><a href="https://billing.spartanhost.net/aff.php?aff=936">SpartanHost</a></td><td align="center">1TB</td><td align="center">1GB</td><td align="center">1</td><td align="center">10</td><td align="center">3TB</td><td align="center">1</td><td align="center">有</td><td align="center">KVM</td><td align="center">6<br>(美元)</td></tr><tr><td align="center"><a href="https://my.serverhub.com/aff.php?aff=970">ServerHub</a></td><td align="center">500GB</td><td align="center">512MB</td><td align="center">2</td><td align="center">1</td><td align="center">1TB</td><td align="center">1</td><td align="center">有</td><td align="center">OpenVZ</td><td align="center">5<br>(美元)</td></tr><tr><td align="center"><a href="https://billing.hudsonvalleyhost.com/aff.php?aff=1153">HudsonValleyHost</a></td><td align="center">250GB</td><td align="center">512MB</td><td align="center">2</td><td align="center">1</td><td align="center">3TB</td><td align="center">1</td><td align="center">无</td><td align="center">OpenVZ</td><td align="center">8<br>(美元)</td></tr><tr><td align="center"><a href="https://clients.liteserver.nl/aff.php?aff=168">LiteServer</a></td><td align="center">512GB</td><td align="center">1GB</td><td align="center">1</td><td align="center">1</td><td align="center">15TB</td><td align="center">1</td><td align="center">有</td><td align="center">KVM</td><td align="center">6<br>(欧元)</td></tr><tr><td align="center"><a href="https://www.time4vps.com/?affid=4214">Time4VPS</a></td><td align="center">256GB</td><td align="center">512MB</td><td align="center">1</td><td align="center">0.1</td><td align="center">2TB</td><td align="center">1</td><td align="center">有</td><td align="center">OpenVZ</td><td align="center">5.19<br>(欧元)</td></tr></tbody></table><p>上述商家只罗列了内存512MB起步的机子，如需更高的配置请自行查看。</p><hr><p>FranTech 是加拿大老牌服务商，成立于 2010 年的，它还有个名字是 BuyVM ，BuyVM 这个站点负责宣传介绍，购买管理则在 FranTech 。他家无限流量很香，就是 KVM 切片和硬盘分开买有点麻烦，不过块存储的优点就是 NVME 固态与机械盘的结合兼顾了性能，缺点是切片经常性缺货。以前虽显示美元，但支付宝结算是加元汇率（约1:5），现在结算是美元汇率(约1:7)，贵了约 40%，加元结算性价比秒杀其他家，现在差距不大。<a href="https://oooutman.github.io/buyvm-frantech/"><strong>点我查看 FranTech 购买流程介绍</strong></a></p><p>VirMach 这家目前有点缩水，硬盘 500GB 变 250GB ，流量 5T 变 1T 。</p><p>LetBox 优势是内存大，流量虽不是无限但也够用了，也经常缺货。</p><p>HostHatch 的优势是节点多，有香港、新加坡这些亚太地区可选，日本地区没有块存储。</p><p>SmartHost 去年也推出了块存储，套餐定制灵活，地区选择也多，也挺吸引人的。</p><p>Greencloud 绿云吹的人也多，尤其日本地区的，不过现在的新机没以前的稳（这点其实各家都差不多），年付略坑，原价入不推荐，能搞到半价券可以试试。</p><div class="note note-info">            <p>对哪家感兴趣的建议先去<strong>全球主机论坛</strong>看看别人怎么说的，可以 Google 搜索 <code>site://hostloc.com 搜索内容</code> ，比如想查看 LetBox 的评价，可以 Google 搜索输入 <code>site://hostloc.com LetBox</code> 就可以搜到论坛内关于 LetBox 的讨论了，个人见解容易片面。</p>          </div>]]></content>
    
    
    <categories>
      
      <category>VPS 推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vps</tag>
      
      <tag>大盘鸡</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-Fluid 添加暗中观察的 menhera 酱</title>
    <link href="/Hexo-Fluid-%E6%B7%BB%E5%8A%A0%E6%9A%97%E4%B8%AD%E8%A7%82%E5%AF%9F%E7%9A%84menhera%E9%85%B1/"/>
    <url>/Hexo-Fluid-%E6%B7%BB%E5%8A%A0%E6%9A%97%E4%B8%AD%E8%A7%82%E5%AF%9F%E7%9A%84menhera%E9%85%B1/</url>
    
    <content type="html"><![CDATA[<h1 id="涉及文件"><a href="#涉及文件" class="headerlink" title="涉及文件"></a>涉及文件</h1><p>除了第一个主题配置文件，其它文件需自行创建。</p><p><code>_config.fluid.yml</code><br><code>hexo-theme-fluid\source\css\custom.css</code><br><code>\hexo-theme-fluid\source\js\custom.js</code><br><code>\hexo-theme-fluid\scripts\bgimage.js</code></p><h1 id="1-修改主题配置文件"><a href="#1-修改主题配置文件" class="headerlink" title="1. 修改主题配置文件"></a>1. 修改主题配置文件</h1><p>在 <code>_config.fluid.yml</code> 里添加一项配置。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">background_image:</span><br><span class="hljs-symbol">  enable:</span> true<br><span class="hljs-symbol">  src:</span> <span class="hljs-keyword">/img/</span>bg01.png<br></code></pre></td></tr></table></figure><blockquote><p><code>background_image</code> 是配置名称，名称可以随便写只要不跟其它项冲突就行，确定好后面就要统一使用这个名称。<br><code>enable:</code> 项方便随时启用和关闭<br><code>src:</code> 项则填写要加入的图片地址</p></blockquote><div class="note note-info">            <p><strong>提醒：</strong>第 1 步其实可以省略，直接将第 2 步里的 <code>&lt;%= theme.background_image.src %&gt;</code> 改为图片地址，再把 <code>if 语句</code> 去掉就可以了。</p>          </div><h1 id="2-注入-HTML-片段"><a href="#2-注入-HTML-片段" class="headerlink" title="2. 注入 HTML 片段"></a>2. 注入 HTML 片段</h1><p>在主题的 <code>\scripts</code> 目录下新建个 <code>bgimage.js</code> 文件，文件名可自行修改。参考<a href="https://hexo.fluid-dev.com/docs/advance/#fluid-%E6%B3%A8%E5%85%A5%E4%BB%A3%E7%A0%81">Fluid 官方注入代码教程</a></p><p>写入以下内容，<code>bodyBegin</code> 这个注入点名称代表注入的 HTML 片段位于 <code>&lt;body&gt;</code> 标签中的开始位置。<code>menhera</code> 这个注入键名也可以自行修改，因为这个小人叫 menhera 所以我这么取名，以后要注入其它代码这个键名不能重复。</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xquery">hexo.extend<span class="hljs-built_in">.filter</span>.register(<span class="hljs-string">&#x27;theme_inject&#x27;</span>, <span class="hljs-keyword">function</span>(injects) &#123;<br>    injects.bodyBegin.raw(<span class="hljs-string">&#x27;menhera&#x27;</span>, `<br>        &lt;% <span class="hljs-keyword">if</span> (theme.background_image.enable) &#123; %&gt;<br>            <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;background-image&quot;</span>&gt;</span></span><br><span class="language-xml">                </span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&lt;%= theme.background_image.src %&gt;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Background image&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><span class="language-xml"></span><br><span class="language-xml">        &lt;% &#125; %&gt;</span><br><span class="language-xml">    `);</span><br><span class="language-xml">&#125;);</span><br></code></pre></td></tr></table></figure><p>这步做完使用 <code>hexo server</code> 命令来预览博客就可以看到加入的图片了，不过现在图片位于页面最左上角，还把头图给挤压到下面去了。除了修改主题配置文件需要退出重进预览才能看到效果，这里的其它修改都是可以修改后在预览状态下刷新页面查看效果的。</p><h1 id="3-自定义-CSS-文件"><a href="#3-自定义-CSS-文件" class="headerlink" title="3. 自定义 CSS 文件"></a>3. 自定义 CSS 文件</h1><p>在主题的 <code>\source\css</code> 目录下创建个 <code>custom.css</code> 文件，名称也可以随意，然后在主题配置文件 <code>_config.fluid.yml</code> 找到 <code>custom_css:</code> 项引入这个 CSS 文件路径，可参考 <a href="https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">Fluid 官方的自定义 JS &#x2F; CSS &#x2F; HTML</a></p><p>复制以下内容编辑 <code>custom.css</code> 文件，设置了 3 项</p><ol><li>图片位置固定</li><li>距离底部高度 280px（可自行修改）</li><li>层级设置了 4 ，设置层级是为了让图片显示在文章区块上面，不然我这里图片的手会被挡住，如果你的图片不想放上面层级可以不设置。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#background-image</span> &#123;<br>    <span class="hljs-attribute">position</span>: fixed;<br>    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">280px</span>;<br>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">4</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这步做完就能看到图片固定在画面最左侧距离底部 280px 高度位置。</p><h1 id="4-自定义-JS-文件"><a href="#4-自定义-JS-文件" class="headerlink" title="4. 自定义 JS 文件"></a>4. 自定义 JS 文件</h1><p>接着给图片加一些效果，fluid 主题的网页右下角有个回到顶部按钮，我们要参考它做些修改，它的函数设置位于主题目录下的这个文件 <code>\source\js\events.js</code>，函数名是 <code>registerScrollTopArrowEvent</code> 。</p><div class="note note-info">            <p><font size=3><strong>添加的图片和回到顶部按钮的相似之处和不同之处</strong></font></p><ul><li>相似之处：要自适应浏览器宽度，缩放窗口宽度时让图片保持与文章区块位置不变</li><li>不同之处：页面顶部下拉一段距离后，按钮是从底部弹出来的，我不要图片弹出来，而是从消失状态到显示状态；另外就是图片在文章区块左边，而按钮在右边</li></ul>          </div><p>在主题的 <code>\source\js</code> 目录下创建个 <code>custom.js</code> 文件，名称也可以随意，然后复制下面内容粘贴进去保存。这是我让 NewBing 参考回到顶部按钮改的，还加了注释。</p><p>下面 <code>50</code> 和 <code>136</code> 这两个数值注意下，50 这个注释写的很清楚了，除非你图片宽度很大，否则可以不管，这是为了自适应手机端；136 这个数值是代表 <code>图片左侧</code> 基于 <code>文章区块左侧</code>并<code>往左移动</code>的距离是 136，不同图片宽度自行调整测试显示效果。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 等待文档加载完成</span><br>$(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 获取背景图像元素</span><br>    <span class="hljs-keyword">var</span> backgroundImage = <span class="hljs-title function_">jQuery</span>(<span class="hljs-string">&#x27;#background-image&#x27;</span>);<br>    <span class="hljs-comment">// 如果背景图像元素不存在，则返回</span><br>    <span class="hljs-keyword">if</span> (backgroundImage.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// 获取board元素</span><br>    <span class="hljs-keyword">var</span> board = <span class="hljs-title function_">jQuery</span>(<span class="hljs-string">&#x27;#board&#x27;</span>);<br>    <span class="hljs-comment">// 如果board元素不存在，则返回</span><br>    <span class="hljs-keyword">if</span> (board.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// 定义posDisplay和scrollDisplay变量，用于控制背景图像的显示</span><br>    <span class="hljs-keyword">var</span> posDisplay = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">var</span> scrollDisplay = <span class="hljs-literal">false</span>;<br>    <span class="hljs-comment">// 定义setBackgroundImagePos函数，用于设置背景图像的位置</span><br>    <span class="hljs-keyword">var</span> setBackgroundImagePos = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-comment">// 获取board元素的左边距</span><br>      <span class="hljs-keyword">var</span> boardLeft = board[<span class="hljs-number">0</span>].<span class="hljs-title function_">getClientRects</span>()[<span class="hljs-number">0</span>].<span class="hljs-property">left</span>;<br>      <span class="hljs-comment">// 根据左边距是否大于等于50来决定是否显示背景图像</span><br>      posDisplay = boardLeft &gt;= <span class="hljs-number">50</span>;<br>      <span class="hljs-comment">// 设置背景图像的display和left属性</span><br>      backgroundImage.<span class="hljs-title function_">css</span>(&#123;<br>        <span class="hljs-string">&#x27;display&#x27;</span>: posDisplay &amp;&amp; scrollDisplay ? <span class="hljs-string">&#x27;block&#x27;</span> : <span class="hljs-string">&#x27;none&#x27;</span>,<br>        <span class="hljs-string">&#x27;left&#x27;</span> : boardLeft - <span class="hljs-number">136</span> + <span class="hljs-string">&#x27;px&#x27;</span><br>      &#125;);<br>    &#125;;<br>    <span class="hljs-comment">// 调用setBackgroundImagePos函数</span><br>    <span class="hljs-title function_">setBackgroundImagePos</span>();<br>    <span class="hljs-comment">// 在窗口大小调整时重新调用setBackgroundImagePos函数</span><br>    <span class="hljs-title function_">jQuery</span>(<span class="hljs-variable language_">window</span>).<span class="hljs-title function_">resize</span>(setBackgroundImagePos);<br>    <span class="hljs-comment">// 获取board元素的顶部偏移量</span><br>    <span class="hljs-keyword">var</span> headerHeight = board.<span class="hljs-title function_">offset</span>().<span class="hljs-property">top</span>;<br>    <span class="hljs-comment">// 监听页面滚动事件</span><br>    <span class="hljs-title class_">Fluid</span>.<span class="hljs-property">utils</span>.<span class="hljs-title function_">listenScroll</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-comment">// 获取滚动高度</span><br>      <span class="hljs-keyword">var</span> scrollHeight = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">scrollTop</span> + <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span>;<br>      <span class="hljs-comment">// 根据滚动高度是否大于等于headerHeight来决定是否显示背景图像</span><br>      scrollDisplay = scrollHeight &gt;= headerHeight;<br>      <span class="hljs-comment">// 设置背景图像的display属性</span><br>      backgroundImage.<span class="hljs-title function_">css</span>(&#123;<br>        <span class="hljs-string">&#x27;display&#x27;</span>: posDisplay &amp;&amp; scrollDisplay ? <span class="hljs-string">&#x27;block&#x27;</span> : <span class="hljs-string">&#x27;none&#x27;</span><br>      &#125;);<br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><p>接着和前面自定义 CSS 文件差不多，在主题配置文件 <code>_config.fluid.yml</code> 找到 <code>custom_js:</code> 项引入这个 JS 文件路径，同样参考 <a href="https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">Fluid 官方的自定义 JS &#x2F; CSS &#x2F; HTML</a></p>]]></content>
    
    
    <categories>
      
      <category>Fluid 主题自定义</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Xray/v2ray与现有网站共存-宝塔篇</title>
    <link href="/Xray_v2ray_website/"/>
    <url>/Xray_v2ray_website/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>使用 Xray 或 v2ray 的各种一键安装脚本基本都自带创建伪装网站，会导致和自己搭建好的网站产生冲突，该教程主要解决这个问题。来看这个教程的我就默认你已经搭建好了站点，就不说怎么建站了。</p><h4 id="教程分为-4-步，复制粘贴几下就搞定了。"><a href="#教程分为-4-步，复制粘贴几下就搞定了。" class="headerlink" title="教程分为 4 步，复制粘贴几下就搞定了。"></a>教程分为 4 步，复制粘贴几下就搞定了。</h4><div class="note note-info">            <ol><li>官方脚本手动安装 Xray&#x2F;v2ray（教程以 Xray 为例，V2ray 除了这个安装脚本不同外其它基本一样）</li><li>编辑 config.json</li><li>修改网站 Web 服务配置文件（教程以 Nginx 为例）</li><li>客户端部署</li></ol>          </div><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>本人也是个小白，我最初的思路就是抄那些一键脚本的配置。开始我只知道要抄 <code>config.json</code> 配置文件，关键的网站与代理流量的分配调用完全没有头绪，后来网上找了下相关教程，知道了可以修改 Nginx 这类 Web 服务配置文件来反向代理流量给 Xray。不过我这样说对没有配置过 Nginx 的初学者也难以理解，想深入理解最好的方法就是自己手搓代码不借助宝塔这类面板搭建一次网站，学会向 AI 提问学习会更加轻松。也可以参考 Xray 官方的手搓教程 <a href="https://xtls.github.io/document/level-0">小小白白话文</a></p><h4 id="实现共存大概有三种方式"><a href="#实现共存大概有三种方式" class="headerlink" title="实现共存大概有三种方式"></a>实现共存大概有三种方式</h4><div class="note note-info">            <p><strong>1. Nginx 前置：</strong>也就是让网站来接收 443 端口流量，再把流量反向代理给 Xray 监听的其它端口；<br><strong>2. Xray 前置：</strong>Xray 监听 443，接收流量后通过 Xray 设置的回落规则至 80 端口，网站只监听 80 端口，删除监听 443，这样就共存了，不过这个方法我还没用过，也懒得设置回落；<br><strong>3. Nginx 分流：</strong>网站和 Xray 都不监听 443 端口，还有把网站的 Nginx 配置文件独立出来（宝塔的站点配置一开始就是独立的），在 Nginx 主配置里将 443 端口流量根据流量特征分发给网站和 Xray。</p>          </div><blockquote><p>相对来说第一种 Nginx 前置配置最简单，教程也是采用这种方式。因为真实网站的质量比起那种随便搞的站点肯定要高，用它来伪装我觉得效果更好。以上思路都是一个小白的理解，不一定准确，有误还望指教。</p></blockquote><h1 id="详细流程"><a href="#详细流程" class="headerlink" title="详细流程"></a>详细流程</h1><h3 id="1-手动安装-Xray-主程序"><a href="#1-手动安装-Xray-主程序" class="headerlink" title="1. 手动安装 Xray 主程序"></a>1. 手动安装 Xray 主程序</h3><p>下面使用官方脚本开始安装。<br><a href="https://github.com/XTLS/Xray-install">查看 GitHub Xray 项目🚀</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)</span>&quot;</span> @ install<br></code></pre></td></tr></table></figure><h3 id="2-修改-Xray-配置文件"><a href="#2-修改-Xray-配置文件" class="headerlink" title="2. 修改 Xray 配置文件"></a>2. 修改 Xray 配置文件</h3><p>配置文件我是参考这个一键脚本的：<a href="https://github.com/wulabing/Xray_onekey">wulabing&#x2F;Xray_onekey</a><br>宝塔面板点击左侧菜单 <code>文件</code>，进入这个目录 <code>/usr/local/etc/v2ray</code>，里面的 <code>config.json</code> 文件就是 Xray 的配置文件，双击打开，里面默认只有一对 <code>&#123;&#125;</code>，删了然后把下面配置复制进去，并修改以下三处。</p><ul><li><code>第 9 行</code> 的端口（示例为 <code>10000</code>，不懂的你就 <code>10000-60000</code> 这个范围随便写个）；</li><li><code>第 16 行</code> 的 UUID（示例为 <code>05c225a5-8b11-4bad-a53a-2a5439a00d5f</code>，用 v2rayN 生成或网上找 UUID 在线生成）；</li><li><code>第 25 行</code> 的路径（示例为 <code>/a1fih5</code> 这个字母数字随便写，长度不一定和这里一样 6 位）</li></ul><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>  <span class="hljs-string">&quot;log&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;access&quot;</span>: <span class="hljs-string">&quot;/var/log/xray/access.log&quot;</span>,<br>    <span class="hljs-string">&quot;error&quot;</span>: <span class="hljs-string">&quot;/var/log/xray/error.log&quot;</span>,<br>    <span class="hljs-string">&quot;loglevel&quot;</span>: <span class="hljs-string">&quot;warning&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;inbounds&quot;</span>: [<br>    &#123;<br>      <span class="hljs-string">&quot;port&quot;</span>: <span class="hljs-number">10000</span>,<br>      <span class="hljs-string">&quot;listen&quot;</span>: <span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>      <span class="hljs-string">&quot;tag&quot;</span>: <span class="hljs-string">&quot;VLESS-in&quot;</span>,<br>      <span class="hljs-string">&quot;protocol&quot;</span>: <span class="hljs-string">&quot;VLESS&quot;</span>,<br>      <span class="hljs-string">&quot;settings&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;clients&quot;</span>: [<br>          &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;05c225a5-8b11-4bad-a53a-2a5439a00d5f&quot;</span>,<br>            <span class="hljs-string">&quot;alterId&quot;</span>: <span class="hljs-number">0</span><br>          &#125;<br>        ],<br>        <span class="hljs-string">&quot;decryption&quot;</span>: <span class="hljs-string">&quot;none&quot;</span><br>      &#125;,<br>      <span class="hljs-string">&quot;streamSettings&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;network&quot;</span>: <span class="hljs-string">&quot;ws&quot;</span>,<br>        <span class="hljs-string">&quot;wsSettings&quot;</span>: &#123;<br>          <span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;/a1fih5&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  ],<br>  <span class="hljs-string">&quot;outbounds&quot;</span>: [<br>    &#123;<br>      <span class="hljs-string">&quot;protocol&quot;</span>: <span class="hljs-string">&quot;freedom&quot;</span>,<br>      <span class="hljs-string">&quot;settings&quot;</span>: &#123;&#125;,<br>      <span class="hljs-string">&quot;tag&quot;</span>: <span class="hljs-string">&quot;direct&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;protocol&quot;</span>: <span class="hljs-string">&quot;blackhole&quot;</span>,<br>      <span class="hljs-string">&quot;settings&quot;</span>: &#123;&#125;,<br>      <span class="hljs-string">&quot;tag&quot;</span>: <span class="hljs-string">&quot;blocked&quot;</span><br>    &#125;<br>  ],<br>  <span class="hljs-string">&quot;dns&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;servers&quot;</span>: [<br>      <span class="hljs-string">&quot;https+local://1.1.1.1/dns-query&quot;</span>,<br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span>,<br>      <span class="hljs-string">&quot;1.0.0.1&quot;</span>,<br>      <span class="hljs-string">&quot;8.8.8.8&quot;</span>,<br>      <span class="hljs-string">&quot;8.8.4.4&quot;</span>,<br>      <span class="hljs-string">&quot;localhost&quot;</span><br>    ]<br>  &#125;,<br>  <span class="hljs-string">&quot;routing&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;domainStrategy&quot;</span>: <span class="hljs-string">&quot;AsIs&quot;</span>,<br>    <span class="hljs-string">&quot;rules&quot;</span>: [<br>      &#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;field&quot;</span>,<br>        <span class="hljs-string">&quot;inboundTag&quot;</span>: [<br>          <span class="hljs-string">&quot;VLESS-in&quot;</span><br>        ],<br>        <span class="hljs-string">&quot;outboundTag&quot;</span>: <span class="hljs-string">&quot;direct&quot;</span><br>      &#125;<br>    ]<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>保存退出后，回到 SSH 输入 <code>systemctl restart xray</code> 重启下 Xray，再输入 <code>systemctl status xray</code> 查看下状态是否为绿色，要是红的就检查下配置文件有没有多余或多删了，重新配置后再重启并检查状态。</p><h3 id="3-Nginx-设置反向代理"><a href="#3-Nginx-设置反向代理" class="headerlink" title="3. Nginx 设置反向代理"></a>3. Nginx 设置反向代理</h3><p>宝塔进入网站设置的配置文件，拉到最后面在最后一个 <code>&#125;</code> 前面插入以下部分，需要把下面的 <code>/a1fih5</code> 和 <code>10000</code> 修改成和上面配置一样的路径和端口，宝塔的这个站点配置改完保存即可生效，手搓可能要重载配置才能生效。</p><pre><code class="hljs">location /a1fih5    &#123;    proxy_redirect off;    proxy_pass http://127.0.0.1:10000;    proxy_http_version 1.1;    proxy_set_header Upgrade $http_upgrade;    proxy_set_header Connection &quot;upgrade&quot;;    proxy_set_header Host $http_host;    proxy_set_header X-Real-IP $remote_addr;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    &#125;</code></pre><p>如图所示👇<br><img src="/img/post/Xraywebsite/Xraywebsite_01.jpg" alt="Xray._01.jpg"></p><h3 id="4-客户端配置"><a href="#4-客户端配置" class="headerlink" title="4. 客户端配置"></a>4. 客户端配置</h3><p>客户端以 v2rayN 为例，参照下图配置即可，主要也就域名、UUID、路径这3个注意下。</p><p><img src="/img/post/Xraywebsite/Xraywebsite_02.jpg" alt="Xray._02.jpg"></p><p><a href="https://github.com/2dust/v2rayN/releases"><strong>v2rayN 下载地址</strong></a> 如果你还在用 4.x的版本建议还是升级下吧，推荐下载版本号后面有绿色<font color=#3fb950> Latest </font>标签的正式版，现在最新正式版是 6.21，上面截图的界面就是 6.21。</p><blockquote><p>吐槽：不论功能，单说界面设计我还是喜欢 6.x 之前的，现在的界面把选框改成了下划线，整个设计碎片化、割裂感太严重了，画面整体性很差，还有莫名奇妙的阴影，深紫色与黑字体的搭配真的让人抓狂😣</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Xray</tag>
      
      <tag>v2ray</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FileBrowser 私人网盘安装配置教程</title>
    <link href="/FileBrowser/"/>
    <url>/FileBrowser/</url>
    
    <content type="html"><![CDATA[<h1 id="安装-FileBrowser"><a href="#安装-FileBrowser" class="headerlink" title="安装 FileBrowser"></a>安装 FileBrowser</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">curl -fsSL https://raw.githubusercontent.<span class="hljs-keyword">com</span>/filebrowser/<span class="hljs-built_in">get</span>/master/<span class="hljs-built_in">get</span>.<span class="hljs-keyword">sh</span> | bash<br></code></pre></td></tr></table></figure><p>出现 <code>curl: command not found</code> 报错就是系统没有安装 curl，请先安装再来执行命令。<br>Debian 系安装命令 <code>apt install curl -y</code><br>CentOS 系安装命令 <code>yum install curl -y</code></p><h1 id="自定义配置-FileBrowser"><a href="#自定义配置-FileBrowser" class="headerlink" title="自定义配置 FileBrowser"></a>自定义配置 FileBrowser</h1><p>开始前先放行 FileBrowser 要用的监听端口，假设放行 <code>9000</code> 端口</p><p>Debian系使用命令 <code>iptables -I INPUT -p tcp --dport 9000 -j ACCEPT</code><br>CentOS系使用命令（两条） <code>firewall-cmd --zone=public --add-port=9000/tcp --permanent</code> 接着需要重载生效 <code>firewall-cmd --reload</code></p><h3 id="配置分三步，初始化、设置、添加用户"><a href="#配置分三步，初始化、设置、添加用户" class="headerlink" title="配置分三步，初始化、设置、添加用户"></a>配置分三步，初始化、设置、添加用户</h3><ol><li><p><strong>初始化：</strong>首先在 <code>/data/filebrowser.db</code> 路径下（路径可以自行更改）创建数据库文件，并初始化 filebrowser 的配置，如果设定了和我不同的路径就要注意修改后面教程的路径。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">filebrowser</span> -d /<span class="hljs-class"><span class="hljs-keyword">data</span>/filebrowser.db config init</span><br></code></pre></td></tr></table></figure></li><li><p><strong>设置：</strong>设置监听地址为 <code>0.0.0.0</code> ；监听端口为 <code>9000</code> ，默认8080；语言为中文</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">filebrowser -d <span class="hljs-string">/data/filebrowser.db</span> config <span class="hljs-keyword">set</span> <span class="hljs-params">--address</span> 0.0.0.0 <span class="hljs-params">--port</span> 9000 <span class="hljs-params">--locale</span> zh-cn<br></code></pre></td></tr></table></figure></li><li><p><strong>添加用户：</strong>添加一个用户名为 <code>yonghuming</code> ，密码为 <code>mima</code> 的用户，并赋予该用户 <code>admin权限</code>。用户名密码自行设定，这步也可以放弃，使用默认admin的用户名和密码，搞完后登陆网页在后台修改。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">filebrowser</span> -d /<span class="hljs-class"><span class="hljs-keyword">data</span>/filebrowser.db users add yonghuming mima <span class="hljs-comment">--perm.admin</span></span><br></code></pre></td></tr></table></figure></li></ol><h3 id="启动调试模式"><a href="#启动调试模式" class="headerlink" title="启动调试模式"></a>启动调试模式</h3><p>启动后通过浏览器打开 <code>http://IP:端口</code> (改为你的 IP 和端口)，出现以下界面表示 FileBrowser 安装成功。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">filebrowser</span> -d /<span class="hljs-class"><span class="hljs-keyword">data</span>/filebrowser.db</span><br></code></pre></td></tr></table></figure><p><a href="https://mdzz.cf/image/8kW"><img src="https://mdzz.cf/images/2023/04/05/filebrowser_01.jpg" alt="filebrowser_01.jpg"></a></p><p>不管成功还是无法访问，先回到 SSH 中，<code>Ctrl+C</code> 退出调试模式。无法访问的从头检查数据库路径、IP和端口有没有出错，端口放行过了没。</p><h1 id="创建-service-管理-FileBrowser"><a href="#创建-service-管理-FileBrowser" class="headerlink" title="创建 service 管理 FileBrowser"></a>创建 service 管理 FileBrowser</h1><p>复制下面全部内容粘贴然后回车</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs abnf">cat &gt; /etc/systemd/system/filebrowser.service &lt;&lt;EOF<br>[Unit]<br><span class="hljs-attribute">Description</span><span class="hljs-operator">=</span>FileBrowser<br><span class="hljs-attribute">After</span><span class="hljs-operator">=</span>network.target<br>[Service]<br><span class="hljs-attribute">ExecStart</span><span class="hljs-operator">=/</span>usr/local/bin/filebrowser -d /data/filebrowser.db<br>[Install]<br><span class="hljs-attribute">WantedBy</span><span class="hljs-operator">=</span>multi-user.target<br>EOF<br></code></pre></td></tr></table></figure><p>重载 systemd 管理器配置，使 filebrowser.service 生效</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl daemon-reload</span><br></code></pre></td></tr></table></figure><h3 id="下面提供了-FileBrowser-的管理命令"><a href="#下面提供了-FileBrowser-的管理命令" class="headerlink" title="下面提供了 FileBrowser 的管理命令"></a>下面提供了 FileBrowser 的管理命令</h3><p>这里使用下 <code>运行</code> 和 <code>开机启动</code> 两条命令，其它的供你参考，中文注释不用复制。</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-comment"># 运行</span><br><span class="hljs-params">system</span>ctl start filebrowser<br><span class="hljs-comment"># 重启</span><br><span class="hljs-params">system</span>ctl restart filebrowser<br><span class="hljs-comment"># 停止运行</span><br><span class="hljs-params">system</span>ctl stop filebrowser<br><span class="hljs-comment"># 开机启动</span><br><span class="hljs-params">system</span>ctl enable filebrowser<br><span class="hljs-comment"># 取消开机启动</span><br><span class="hljs-params">system</span>ctl disable filebrowser<br><span class="hljs-comment"># 查看运行状态</span><br><span class="hljs-params">system</span>ctl status filebrowser<br></code></pre></td></tr></table></figure><h1 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h1><p>登录 FileBrowser 后默认位于根目录范围，你可以在设置→用户管理→🖊修改目录范围，也可以在这里修改用户名和密码，保存下就好了，其它设置请自行研究。</p><p><a href="https://mdzz.cf/image/8kW"><img src="https://mdzz.cf/images/2023/04/05/filebrowser_02.jpg" alt="filebrowser_02.jpg"></a><br><a href="https://mdzz.cf/image/8kW"><img src="https://mdzz.cf/images/2023/04/05/filebrowser_03.jpg" alt="filebrowser_03.jpg"></a><br><a href="https://mdzz.cf/image/8kW"><img src="https://mdzz.cf/images/2023/04/05/filebrowser_04.jpg" alt="filebrowser_04.jpg"></a></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>如果你的 IP 已经绑定了域名，且已经申请了 SSL 证书，想开启 Https 访问，步骤如下。<br>运行状态的 filebrowser 先停止，再输入以下命令，注意修改证书文件和私钥文件的路径，完事再运行就可以 Https 访问了。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">filebrowser -d <span class="hljs-string">/data/filebrowser.db</span> config <span class="hljs-keyword">set</span> <span class="hljs-params">--cert</span> <span class="hljs-string">/path/to/cert.pem</span> <span class="hljs-params">--key</span> <span class="hljs-string">/path/to/key.pem</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>玩转 VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网盘</tag>
      
      <tag>私有云</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vi/vim基本操作命令</title>
    <link href="/vi-vim/"/>
    <url>/vi-vim/</url>
    
    <content type="html"><![CDATA[<p>vi 编辑器是所有 Unix 及 Linux 系统下标准的编辑器，初学者可以当作类似于 windows 上的文本文档差不多的东西。本文只是简单地介绍下 vi&#x2F;vim 的基本用法和一部分指令，满足普通用户正常使用！vi 和 vim 它们都是多模式编辑器，不同的是 vim 是 vi 的升级版本，它不仅兼容 vi 的所有指令，而且还有一些新的特性在里面。例如语法高亮，可视化操作不仅可以在终端运行，也可以运行于x window、 mac os、 windows。</p><h2 id="vi的基本概念"><a href="#vi的基本概念" class="headerlink" title="vi的基本概念"></a>vi的基本概念</h2><p>基本上 vi 可以分为三种状态，各模式的功能区分如下：</p><ol><li><p><strong>命令行模式（command mode）</strong><br>控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入 <code>插入模式</code> 或 <code>底行模式</code> 。</p></li><li><p><strong>插入模式（Insert mode）</strong><br>只有在插入模式下，才可以进行文字输入，该模式下按 <code>ESC</code> 键可回到命令行模式。</p></li><li><p><strong>底行模式（last line mode）</strong><br>将文件 <code>保存</code> 或 <code>退出</code> ，也可以设置编辑环境，如寻找字符串、列出行号……等。 不过一般我们在使用时把 vi 简化成两个模式，就是将 <code>底行模式</code> 也算入 <code>命令行模式</code> 。</p></li></ol><h2 id="vi的基本操作"><a href="#vi的基本操作" class="headerlink" title="vi的基本操作"></a>vi的基本操作</h2><p>只要懂得这三项基本操作使用基本上就掌握 vi 使用了，其它命令只是帮助你更高效的使用 vi。能全部记住自然最好，记不住也没关系，用到的时候查下资料就好，如果经常使用相比不用刻意记也会记住的。</p><ol><li><p><strong>进入 vi</strong><br>比如我要编辑一个名为 <code>myfile</code> 的文本文件，只要输入 <code>vi myfile</code> 即可进入这个文件的vi编辑界面。刚进入vi是处于命令行模式，这时是不能编辑文本的，需要切换到插入模式才能够输入或删除文字。</p></li><li><p><strong>切换至插入模式编辑文件</strong><br>在命令行模式下按一下字母 <code>i</code> 就可以进入插入模式，这时你就可以↑↓←→移动光标到对应位置，然后输入或删除文本了。顺带一体，使用 putty 这个 SSH 客户端时，不要用小键盘输入数字，会出错。</p></li><li><p><strong>退出 vi 和保存文件</strong><br>在命令行模式下，输入 <code>:</code> 键进入底行模式，例如：<br><code>:w newname</code> （将文件重命名为 newname 保存）<br><code>:wq</code> (保存并退出 vi，后面加入 ! 如 <code>:wq!</code> 则是强制保存退出)<br><code>:q</code> (不保存退出 vi，后面加入 ! 如 <code>:q!</code> 则是强制不保存退出)</p></li></ol><h2 id="命令行模式功能键"><a href="#命令行模式功能键" class="headerlink" title="命令行模式功能键"></a>命令行模式功能键</h2><ol><li><p>插入模式<br>要进入插入模式有以下三种选择</p><ul><li>按 <code>i</code> 进入插入模式后，是从光标当前位置开始输入文件</li><li>按 <code>a</code> 进入插入模式后，是从目前光标所在位置的下一个位置开始输入文字</li><li>按 <code>o</code> 进入插入模式后，是插入新的一行，从行首开始输入文字。</li></ul></li><li><p>从插入模式切换为命令行模式<br>按 <code>ESC</code> 键。</p></li><li><p>移动光标<br>vi 可以直接用键盘上的 <code>↑↓←→</code> 来移动光标，但正规用法是使用小写英文字母 <code>h</code> 、 <code>j</code> 、 <code>k</code> 、 <code>l</code> 来控制光标左、下、上、右移一格。<br>按 <code>ctrl+b</code> ：屏幕往“后”移动一页。<br>按 <code>ctrl+f</code> ：屏幕往“前”移动一页。<br>按 <code>ctrl+u</code> ：屏幕往“后”移动半页。<br>按 <code>ctrl+d</code> ：屏幕往“前”移动半页。<br>按数字 <code>0</code> ：移到文章的开头。<br>按 <code>G</code> ：移动到文章的最后。<br>按 <code>$</code>：移动到光标所在行的“行尾”。<br>按 <code>^</code>：移动到光标所在行的“行首”<br>按 <code>w</code>：光标跳到下个字的开头<br>按 <code>e</code>：光标跳到下个字的字尾<br>按 <code>b</code>：光标回到上个字的开头<br>按 <code>#l</code>：光标移到该行的第 # 个位置，如：5l,56l。</p></li><li><p>删除文字<br><code>x</code> ：每按一次，删除光标所在位置的“后面”一个字符。<br><code>#x</code> ：例如，「6x」表示删除光标所在位置的“后面”6个字符。<br><code>X</code> ：大写的X，每按一次，删除光标所在位置的“前面”一个字符。<br><code>#X</code> ：例如，「20X」表示删除光标所在位置的“前面”20个字符。<br><code>dd</code> ：删除光标所在行。<br><code>#dd</code> ：从光标所在行开始删除#行</p></li><li><p>复制<br><code>yw</code> ：将光标所在之处到字尾的字符复制到缓冲区中。<br><code>#yw</code> ：复制#个字到缓冲区<br><code>yy</code> ：复制光标所在行到缓冲区。<br><code>#yy</code> ：例如，「6yy」表示拷贝从光标所在的该行“往下数”6行文字。<br><code>p</code> ：将缓冲区内的字符贴到光标所在位置。注意：所有与“y”有关的复制命令都必须与“p”配合才能完成复制与粘贴功能。</p></li><li><p>替换<br><code>r</code> ：替换光标所在处的字符。<br><code>R</code> ：替换光标所到之处的字符，直到按下 <code>ESC</code> 键为止。</p></li><li><p>返回上一步操作<br><code>u</code> ：比如你在插入模式下误删了文本内容，想返回上一步，需先按 <code>ESC</code> 键进入命令行模式，然后按下 <code>u</code> 键，回到上一个操作。按多次 <code>u</code> 可以执行多次恢复。</p></li><li><p>恢复撤销操作<br><code>ctrl+r</code> ：如果按 <code>u</code> 不小心返回过头了,那么可以按下 <code>ctrl+r</code> 恢复上一步撤销操作,同样可执行多次。</p></li><li><p>更改<br><code>cw</code> ：更改光标所在处的字到字尾处<br><code>c#w</code> ：例如，「c3w」表示更改3个字</p></li><li><p>跳至指定的行<br><code>ctrl+g</code>列出光标所在行的行号。<br><code>#G</code>：例如，「15G」，表示移动光标至文章的第15行行首。</p></li></ol><h2 id="底行模式下命令简介"><a href="#底行模式下命令简介" class="headerlink" title="底行模式下命令简介"></a>底行模式下命令简介</h2><p>在使用底行模式之前，请记住先按 <code>ESC</code> 键确定您已经处于命令行模式下后，再输入 <code>:</code> 即可进入底行模式。 </p><ol><li>列出行号<br><code>set nu</code> ：在文件中的每一行前面列出行号。</li><li>跳到文件中的某一行<br><code>#</code> ：<code>#</code> 号表示一个数字，在冒号后输入一个数字，再按回车键就会跳到该行了</li><li>查找字符<br><code>/关键字</code> ：先按 <code>/</code> 键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按 <code>n</code> 向后查找。<br><code>?关键字</code>：先按 <code>?</code> 键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按 <code>n</code> 向前查找。</li><li>保存文件<br><code>w</code> ：冒号后输入字母 <code>w</code> 就可以将文件保存起来</li><li>退出 vi<br><code>q</code> ：退出不保存，如果按 <code>q</code> 无法退出vi，可以在后面加个 <code>!</code> 强制退出 vi<br><code>wq</code> ：保存并退出，记住w在前要先保存才能退出</li></ol><h2 id="vi-命令列表"><a href="#vi-命令列表" class="headerlink" title="vi 命令列表"></a>vi 命令列表</h2><p>下表列出命令模式下的一些键的功能<br><code>h</code> 左移光标一个字符<br><code>l</code> 右移光标一个字符<br><code>k</code> 光标上移一行<br><code>j</code> 光标下移一行<br><code>^</code> 光标移动至行首<br><code>0</code> 数字“0”，光标移至文章的开头<br><code>G</code> 光标移至文章的最后<br><code>$</code> 光标移动至行尾<br><code>Ctrl+f</code> 向前翻屏<br><code>Ctrl+b</code> 向后翻屏<br><code>Ctrl+d</code> 向前翻半屏<br><code>Ctrl+u</code> 向后翻半屏<br><code>i</code> 在光标位置前插入字符<br><code>a</code> 在光标所在位置的后一个字符开始增加<br><code>o</code> 插入新的一行，从行首开始输入<br><code>ESC</code> 从输入状态退至命令状态<br><code>x</code> 删除光标后面的字符<br><code>#x</code> 删除光标后的＃个字符<br><code>X</code> (大写X)，删除光标前面的字符<br><code>#X</code> 删除光标前面的#个字符<br><code>dd</code> 删除光标所在的行<br><code>#dd</code> 删除从光标所在行数的#行<br><code>yw</code> 复制光标所在位置的一个字<br><code>#yw</code> 复制光标所在位置的#个字<br><code>yy</code> 复制光标所在位置的一行<br><code>#yy</code> 复制从光标所在行数的#行<br><code>p</code> 粘贴<br><code>u</code> 取消操作<br><code>cw</code> 更改光标所在位置的一个字<br><code>#cw</code> 更改光标所在位置的#个字 </p><p><strong>下表列出行底行模式下的一些指令</strong><br><code>w newname</code> 将正在编辑的文件重命名为 newname 并保存<br><code>wq</code> 保存并退出 vi<br><code>q</code> 放弃所有修改，退出vi<br><code>set nu</code> 显示行号<br><code>/</code> 或 <code>?</code> 查找，在 &#x2F; 后输入要查找的内容<br><code>n</code> 与 <code>/</code> 或 <code>?</code> 一起使用，如果查找的内容不是想要找的关键字，按 <code>n</code> 或向后（与 <code>/</code> 联用）或向前（与 <code>?</code> 联用）继续查找，直到找到为止。</p>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>vi/vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH客户端—Putty简易使用教程</title>
    <link href="/ssh-putty/"/>
    <url>/ssh-putty/</url>
    
    <content type="html"><![CDATA[<p>SSH 简单理解就是本地跟远程 VPS 服务器通信的一种协议，我们要登录购买的 VPS 就需要借助 SSH 客户端。</p><p>SSH 客户端有很多，其他人推荐最多的是 Xshell 和 FinalShell 。这里要介绍的是 Putty 这个客户端，Putty 是个免费免安装的开源软件，仅1M多点的一个 exe 文件，十分小巧。新手自己不会写代码，只是复制粘贴搭建一些简单工具，Putty 虽然简陋，但也够用了。</p><p>Putty 官网传送门： <a href="https://www.putty.org/">https://www.putty.org/</a></p><h2 id="下载Putty"><a href="#下载Putty" class="headerlink" title="下载Putty"></a>下载Putty</h2><p>进入官网后如下图，点击 <code>here</code> 进入下载页面</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_01.jpg" alt="Putty_01.jpg"></p><p>然后找到 Putty SSH 的客户端，选择32位或64位程序下载，要是不知道选哪个就选32位</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_02.jpg" alt="Putty_02.jpg"></p><h2 id="Putty的两种登录方法"><a href="#Putty的两种登录方法" class="headerlink" title="Putty的两种登录方法"></a>Putty的两种登录方法</h2><p>推荐使用第二种快捷登录</p><h3 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h3><p>双击已经下好的 putty.exe 程序打开配置界面，可以看到默认界面如下图，已经默认 22 的服务器端口和 SSH 协议，这两个不用改，除非你自己更改过服务器SSH端口。</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_03.jpg" alt="Putty_03.jpg"></p><p>你购买VPS服务器后都会给你提供服务器 IP 和服务器登录密码，这里我们先填入 <code>服务器IP</code> ，密码连接后才要求输入，这里也没有输密码的地方。填入 IP 地址后可以在下方保存你已经输入的 IP 配置（以后只要读取配置就行了），然后点击 Open 就可以连接服务器了。</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_04.jpg" alt="Putty_04.jpg"></p><p>第一次连接需要在注册表生成服务器的密钥指纹，点击 <code>Accept</code> 接受即可。</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_05.jpg" alt="Putty_05.jpg"></p><p>然后会让你输入登录名，默认是 <code>root</code> ，填入回车。接着要求你输入密码，<font color=#c7254e><strong>密码输入过程是不显示的</strong></font>。如果你要直接粘贴进去，快捷键不是ctrl+v，而是在 putty 窗口下直接 <code>单击鼠标右键</code> 或者按 <code>shift+Ins</code> 快捷键来将剪贴板内容粘贴进去；如果你要从 putty 里复制内容，快捷键也不是 ctrl+c，而是 <code>alt+Ins</code>，实际上复制不用快捷键，只要把内容选中就会自动复制下来了。</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_06.jpg" alt="Putty_06.jpg"></p><p><font color=#c7254e><strong>注意：</strong></font>putty 与服务器的连接如果一段时间内你没有操作可能会自动断开连接，提示如下图。</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_07.jpg" alt="Putty_07.jpg"></p><p>如果你出现这种情况，可以在窗口栏区域右键（也可以在登录前界面设置），点击 <code>Change Settings</code> 去更改设置，再选择 <code>connection</code> 连接选项，右边填入 <code>20</code> ，这样每隔 20 秒会向服务器发送空数据包以保持会话处于活动状态，这个值你可以根据情况自行设定。</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_08.jpg" alt="Putty_08.jpg"></p><h3 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h3><p>每次登录还要手动填用户名和密码是不是挺烦的，putty 还有更快捷的登录方式。</p><p>首先把 putty.exe 程序移到随便哪个文件夹都行，不要直接放在桌面，然后在桌面创建个快捷方式（不会创建自行百度）。右键单击快捷方式，打开属性，在目标后面加上 <code>root@IP -P 22 -pw 密码</code> ，注意这里的 <code>IP</code> 和 <code>密码</code> 改成你自己的，注意空格，root 前面也有一个空格，想指定端口号可以加上 <code>-P 22</code> ，如果更改过服务器 SSH 端口，则把 <code>22</code> 替换成改过的端口，最后再确定即可。</p><p>完事直接双击这个快捷方式就可以自动登录服务器了，就是有多个服务器需要多创建几个快捷方式。</p><p><img src="https://mdzz.cf/images/2023/03/31/Putty_09.jpg" alt="Putty_09.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Putty</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vultr 新人免费250美金试用教程</title>
    <link href="/Vultr_free_250/"/>
    <url>/Vultr_free_250/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>注意赠送的 250 美元只有 1 个月时效，老客户别冒险尝试，可能会导致老帐号也被封了，以后你的 IP 想注册都注册不了。新人接触 VPS 用的最多就是搭建代理翻墙工具，那么可以各个地区的节点都尝试下，没必要尝试很贵的，最低档的基本就满足需求了。还可以试试挂载块存储搭建网盘离线下载，或者尝试使用 WordPress、Hexo、Halo 搭建网站博客，我这个博客就是 Hexo 搭建的。总之多学多试不要浪费。以后决定是否付费购买自己心里也更有底了，毕竟最低充值 10 美元起对初次接触 VPS 的新人门槛高了点。</p><p>Vultr 的有两大优点，一是按时间收费，比如你 5 美元&#x2F;月的实例，用半个月删了就是扣一半 2.5 美元，关于流量超了一半会不会多扣我不太清楚，因为我是完全够用从没超过，注意必须删除实例才停止计费，只是关机还是会继续扣费。时间收费还有个优点就是项目练手，比如你当前服务器已经有一些项目在用了，这时上手新项目害怕失败对服务器有影响，虽然 Vultr 有快照功能，不过搞快照也挺麻烦，直接重开个机子练手更方便。</p><p>第二个优点是 IP 免费更换，如果 VPS 的 IP 被墙了，你想搭建科学上网也是不行的，不过这几年国内很少封国外 IP 了。Vultr 可以通过新建实例重新分配个 IP，然后再删除被墙 IP 的实例，这样就相当于免费更换 IP 了。</p><h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><p>点击这个链接进入赠金账号注册页面 <a href="https://www.vultr.com/promo/try250/?ref=7297182">https://www.vultr.com/promo/try250</a></p><p>刚点击链接会先出现一个安全验证页面判断是否是真人，选框打勾好了，然后就转到赠金账号注册了（这里我使用了浏览器网页翻译，看不懂英文也可以用网页翻译，注意有时在提交确认选项的时候翻译后的网页会失效），按要求填写邮件地址和密码，注意密码的规范，好像会给你发邮件确认，记不太清了，注意看提示。</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://mdzz.cf/images/2023/03/31/Vultr_01.jpg" alt="Vultr_01.jpg"></div><div class="group-image-wrap"><img src="https://mdzz.cf/images/2023/03/31/Vultr_02.jpg" alt="Vultr_02.jpg"></div></div></div><h2 id="获得-250-美元赠金"><a href="#获得-250-美元赠金" class="headerlink" title="获得 250 美元赠金"></a>获得 250 美元赠金</h2><p>注册完成登陆后，按下图顺序点击 <code>Billing（计费）</code> 选项，再点击 <code>Gift Code（礼品码）</code> ，输入礼品码：<font color=#30a9de><strong>FLYVULTR250</strong></font> 后提交就行，这样赠金就到账了。</p><p>礼品码上面有个 <code>Alipay（支付宝）</code> 选项，以后想充值可以用支付宝扫码充值。</p><p><img src="https://mdzz.cf/images/2023/03/31/Vultr_03.jpg" alt="Vultr_03.jpg"></p><h2 id="实例部署"><a href="#实例部署" class="headerlink" title="实例部署"></a>实例部署</h2><p>点击左侧的 <code>Products（产品）</code> 选项，鼠标移动到蓝色的圆形带+号的图标上，再点击第一个下拉选项 <code>Deploy New Server（部署新服务器）</code>，</p><p><img src="https://mdzz.cf/images/2023/03/31/Vultr_04.jpg" alt="Vultr_04.jpg"></p><p>进入新页面后第一项是选择服务器，这里选第二个 <code>云计算</code> 。处理器和存储这里四个选项一般选第四个 <code>intel常规</code> ，因为更便宜，不过有赠金的话选前面两个也可以。</p><p><a href="https://mdzz.cf/image/M0e"><img src="https://mdzz.cf/images/2023/03/31/Vultr_05.jpg" alt="Vultr_05.jpg"></a></p><p>服务器位置当然是离我们越近越好，这样速度快延迟也低，<code>东京、汉城、新加坡</code> 这三个节点比较推荐。如果自费想省钱，在上一步处理器选择项选了第四个的，选择 <code>纽约</code> 节点等下会有个更便宜的选项。</p><p><img src="https://mdzz.cf/images/2023/03/31/Vultr_06.jpg" alt="Vultr_06.jpg"></p><p>操作系统这里选第一个 AlmaLinux ，想了下新人还是推荐用 Debian 吧，因为很多针对初学者的教程还有一键脚本 Debian 用的比较多，这样用的会顺点。下面的套餐我选了 3.5 美元的，如上所述，只有处理器项选第四个和纽约节点才有3.5美元，2.5美元的没有 IPv4 别选。如果处理器项选第四个其它节点最低也要5美元。</p><p><img src="https://mdzz.cf/images/2023/03/31/Vultr_07.jpg" alt="Vultr_07.jpg"></p><div class="note note-info">            <p><font size=4><strong>TIP</strong></font></p><ul><li><p>除了最后两个 Windows 系统，其它都是 Linux 不同的发行版，你可以理解为不同安卓手机品牌用的都是安卓系统，但是又有所区别。这些发行版大致又可分为 RedHat（红帽） 和 Debian 两派，对于新人来说它们之间最主要的区别就是包管理器和软件仓库，体现在使用中的区别就是安装软件工具和升级系统时使用的命令不同，比如要安装 Vim， RHEL 的命令是 <code>yum install vim</code>，Debian 的命令则是 <code>apt-get install vim</code>。找各种搭建教程时要看清人家的安装命令是不是你系统能用的。</p></li><li><p>前面提到 IP 如果被墙，可以新建实例来分配新 IP，这时你可能会问那我原来机子的安装的东西不就都没了。这点你可以通过给旧服务器创建 <code>快照（Snapshot）</code>，然后新建实例时上面这步选择系统可以不选择系统，而是切换到图中右上角 <code>Snapshot</code> 菜单，选择你创建的快照部署就行了，但是因为新机器的 IP 不同，原实例里涉及到 IP 的相关配置得重新设置下。</p></li></ul>          </div><p>去掉自动备份的选项，弹出提示打勾禁用就行了，然后最下面的主机名和标签随便填下就可以了，确认下价格就可以点击部署了。</p><p><img src="https://mdzz.cf/images/2023/03/31/Vultr_08.jpg" alt="Vultr_08.jpg"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>跳转到你的实例页面稍微等下，等状态变为绿色 Running，然后鼠标移到 IP 上，会出现复制按钮跟提示，先复制 IP ，看下能不能 ping 通。按下快捷键 <code>Win+R</code> 打开运行，输入 <code>cmd</code> 确定，因为我的 IP 是 45.63.22.166 ，于是输入 <code>ping 45.63.22.166</code> 回车。如果有延时显示就是通的能连上，提示超时就是这个 IP 被墙了连不上。你先别删除实例，按前面的步骤重新申请一个，等状态绿了再删掉被墙的这个，不然先删再申请很容易给你同个 IP 。</p><div class="note note-warning">            <p>状态刚绿 ping 不通并不代表 IP 被墙，有时 ping 通了也会登录不了服务器，其实这时后台还在安装，可以稍微等2分钟，页面右上角有个电脑图标，点它可以打开控制台，看到当前安装进度。安装完成了还是 ping 不通再考虑换。</p>          </div><p><img src="https://mdzz.cf/images/2023/03/31/Vultr_09.jpg" alt="Vultr_09.jpg"></p><p>确保能 ping 通后，想登录服务器我们还得获取到服务器的相关信息，鼠标移到国旗上点下，页面跳转到服务器信息，IP 地址、用户名、密码这三项是我们登录服务器的关键信息。</p><p><img src="https://mdzz.cf/images/2023/03/31/Vultr_10.jpg" alt="Vultr_10.jpg"></p><p>具体 VPS 服务器登录请看这个教程👉 <a href="https://oooutman.github.io/ssh-putty/">SSH客户端—Putty简易使用教程</a></p>]]></content>
    
    
    <categories>
      
      <category>VPS 推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Vultr</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
